{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Menu from \"./components/Menu\";\nimport Connections from \"./components/Connections\";\nimport Strands from \"./components/Strands\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let SECTION = /*#__PURE__*/function (SECTION) {\n  SECTION[SECTION[\"NONE\"] = 0] = \"NONE\";\n  SECTION[SECTION[\"CONNECTIONS\"] = 1] = \"CONNECTIONS\";\n  SECTION[SECTION[\"STRANDS\"] = 2] = \"STRANDS\";\n  return SECTION;\n}({});\nfunction App() {\n  _s();\n  const [section, setSection] = useState(SECTION.NONE);\n  const [rows, setRows] = useState([]);\n  const [noShow, setNoShow] = useState([]);\n  const [finalLines, setFinalLines] = useState([]);\n  const [pangramLines, setPangramLines] = useState([]);\n  const [wordCount, setWordCount] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      width: window.innerWidth\n    },\n    children: [section == SECTION.NONE && /*#__PURE__*/_jsxDEV(Menu, {\n      section: section,\n      setSection: setSection\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), section == SECTION.CONNECTIONS && /*#__PURE__*/_jsxDEV(Connections, {\n      section: section,\n      setSection: setSection,\n      rows: rows,\n      setRows: setRows,\n      noShow: noShow,\n      setNoShow: setNoShow\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), section == SECTION.STRANDS && /*#__PURE__*/_jsxDEV(Strands, {\n      section: section,\n      setSection: setSection,\n      finalLines: finalLines,\n      setFinalLines: setFinalLines,\n      pangramLines: pangramLines,\n      setPangramLines: setPangramLines,\n      wordCount: wordCount,\n      setWordCount: setWordCount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"uUMZngxZ5TPQd/5ojjAyb9WhKas=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Menu","Connections","Strands","jsxDEV","_jsxDEV","SECTION","App","_s","section","setSection","NONE","rows","setRows","noShow","setNoShow","finalLines","setFinalLines","pangramLines","setPangramLines","wordCount","setWordCount","className","style","width","window","innerWidth","children","fileName","_jsxFileName","lineNumber","columnNumber","CONNECTIONS","STRANDS","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/App.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useState } from \"react\";\nimport Menu from \"./components/Menu\";\nimport Connections, { Row } from \"./components/Connections\";\nimport Strands from \"./components/Strands\";\n\nexport type MenuProps = {\n  section: SECTION;\n  setSection: Dispatch<SetStateAction<SECTION>>;\n};\n\nexport enum SECTION {\n  NONE,\n  CONNECTIONS,\n  STRANDS,\n}\n\nfunction App() {\n  const [section, setSection] = useState<SECTION>(SECTION.NONE);\n  const [rows, setRows] = useState<Row[]>([]);\n  const [noShow, setNoShow] = useState<string[]>([]);\n  const [finalLines, setFinalLines] = useState<any[]>([]);\n  const [pangramLines, setPangramLines] = useState<any[]>([]);\n  const [wordCount, setWordCount] = useState<number>(0);\n  return (\n    <div className=\"App\" style={{ width: window.innerWidth }}>\n      {section == SECTION.NONE && (\n        <Menu section={section} setSection={setSection} />\n      )}\n      {section == SECTION.CONNECTIONS && (\n        <Connections\n          section={section}\n          setSection={setSection}\n          rows={rows}\n          setRows={setRows}\n          noShow={noShow}\n          setNoShow={setNoShow}\n        />\n      )}\n      {section == SECTION.STRANDS && (\n        <Strands\n          section={section}\n          setSection={setSection}\n          finalLines={finalLines}\n          setFinalLines={setFinalLines}\n          pangramLines={pangramLines}\n          setPangramLines={setPangramLines}\n          wordCount={wordCount}\n          setWordCount={setWordCount}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAAmCA,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,WAAW,MAAe,0BAA0B;AAC3D,OAAOC,OAAO,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAO3C,WAAYC,OAAO,0BAAPA,OAAO;EAAPA,OAAO,CAAPA,OAAO;EAAPA,OAAO,CAAPA,OAAO;EAAPA,OAAO,CAAPA,OAAO;EAAA,OAAPA,OAAO;AAAA;AAMnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAUM,OAAO,CAACK,IAAI,CAAC;EAC7D,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAW,EAAE,CAAC;EAClD,MAAM,CAACgB,UAAU,EAAEC,aAAa,CAAC,GAAGjB,QAAQ,CAAQ,EAAE,CAAC;EACvD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAQ,EAAE,CAAC;EAC3D,MAAM,CAACoB,SAAS,EAAEC,YAAY,CAAC,GAAGrB,QAAQ,CAAS,CAAC,CAAC;EACrD,oBACEK,OAAA;IAAKiB,SAAS,EAAC,KAAK;IAACC,KAAK,EAAE;MAAEC,KAAK,EAAEC,MAAM,CAACC;IAAW,CAAE;IAAAC,QAAA,GACtDlB,OAAO,IAAIH,OAAO,CAACK,IAAI,iBACtBN,OAAA,CAACJ,IAAI;MAACQ,OAAO,EAAEA,OAAQ;MAACC,UAAU,EAAEA;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAClD,EACAtB,OAAO,IAAIH,OAAO,CAAC0B,WAAW,iBAC7B3B,OAAA,CAACH,WAAW;MACVO,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBE,IAAI,EAAEA,IAAK;MACXC,OAAO,EAAEA,OAAQ;MACjBC,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA;IAAU;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CACF,EACAtB,OAAO,IAAIH,OAAO,CAAC2B,OAAO,iBACzB5B,OAAA,CAACF,OAAO;MACNM,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBM,UAAU,EAAEA,UAAW;MACvBC,aAAa,EAAEA,aAAc;MAC7BC,YAAY,EAAEA,YAAa;MAC3BC,eAAe,EAAEA,eAAgB;MACjCC,SAAS,EAAEA,SAAU;MACrBC,YAAY,EAAEA;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACvB,EAAA,CApCQD,GAAG;AAAA2B,EAAA,GAAH3B,GAAG;AAsCZ,eAAeA,GAAG;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}