{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/bday/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport Menu from \"./components/Menu\";\nimport Connections from \"./components/connections/Connections\";\nimport Strands from \"./components/strands/Strands\";\nimport Vertex from \"./components/vertex/Vertex\";\nimport Mini from \"./components/mini/Mini\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport let SECTION = /*#__PURE__*/function (SECTION) {\n  SECTION[SECTION[\"LOCKED\"] = 0] = \"LOCKED\";\n  SECTION[SECTION[\"NONE\"] = 1] = \"NONE\";\n  SECTION[SECTION[\"CONNECTIONS\"] = 2] = \"CONNECTIONS\";\n  SECTION[SECTION[\"STRANDS\"] = 3] = \"STRANDS\";\n  SECTION[SECTION[\"SPELLINGBEE\"] = 4] = \"SPELLINGBEE\";\n  SECTION[SECTION[\"VERTEX\"] = 5] = \"VERTEX\";\n  SECTION[SECTION[\"MINI\"] = 6] = \"MINI\";\n  SECTION[SECTION[\"APP\"] = 7] = \"APP\";\n  return SECTION;\n}({});\nfunction App() {\n  _s();\n  const [section, setSection] = useState(SECTION.NONE);\n  const [rows, setRows] = useState([]);\n  const [noShow, setNoShow] = useState([]);\n  const [finalLines, setFinalLines] = useState([]);\n  const [pangramLines, setPangramLines] = useState([]);\n  const [wordCount, setWordCount] = useState(0);\n  const [foundWords, setFoundWords] = useState([]);\n  const [foundPangram, setFoundPangram] = useState([]);\n  const [answer, setAnswer] = useState([[\".\", \".\", \"\", \"\", \"\", \".\", \".\"], [\".\", \"\", \"\", \"\", \"\", \"\", \".\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\"\", \"\", \"\", \"\", \"\", \"\", \"\"], [\".\", \"\", \"\", \"\", \"\", \"\", \".\"], [\".\", \".\", \"\", \"\", \"\", \".\", \".\"]]);\n  const [connectionsDone, setConnectionsDone] = useState(false);\n  const [strandsDone, setStrandsDone] = useState(false);\n  const [miniDone, setMiniDone] = useState(false);\n  const [vertexDone, setVertexDone] = useState(false);\n  const [lines, setLines] = useState([]);\n  const [confirmedTriangles, setConfirmedTriangles] = useState([]);\n  const [keycode, setKeyCode] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    style: {\n      width: window.innerWidth\n    },\n    children: [section == SECTION.LOCKED && /*#__PURE__*/_jsxDEV(Locked, {\n      section: section,\n      setSection: setSection,\n      passcode: passcode,\n      setPasscode: setPasscode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), section == SECTION.NONE && /*#__PURE__*/_jsxDEV(Menu, {\n      setSection: setSection,\n      connectionsDone: connectionsDone,\n      strandsDone: strandsDone,\n      miniDone: miniDone,\n      vertexDone: vertexDone,\n      keycode: keycode,\n      setKeyCode: setKeyCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), section == SECTION.CONNECTIONS && /*#__PURE__*/_jsxDEV(Connections, {\n      setSection: setSection,\n      rows: rows,\n      setRows: setRows,\n      noShow: noShow,\n      setNoShow: setNoShow,\n      done: connectionsDone,\n      setDone: setConnectionsDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), section == SECTION.STRANDS && /*#__PURE__*/_jsxDEV(Strands, {\n      setSection: setSection,\n      finalLines: finalLines,\n      setFinalLines: setFinalLines,\n      pangramLines: pangramLines,\n      setPangramLines: setPangramLines,\n      wordCount: wordCount,\n      setWordCount: setWordCount,\n      foundWords: foundWords,\n      setFoundWords: setFoundWords,\n      foundPangram: foundPangram,\n      setFoundPangram: setFoundPangram,\n      done: strandsDone,\n      setDone: setStrandsDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this), section == SECTION.VERTEX && /*#__PURE__*/_jsxDEV(Vertex, {\n      setSection: setSection,\n      lines: lines,\n      setLines: setLines,\n      confirmedTriangles: confirmedTriangles,\n      setConfirmedTriangles: setConfirmedTriangles,\n      done: vertexDone,\n      setDone: setVertexDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), section == SECTION.MINI && /*#__PURE__*/_jsxDEV(Mini, {\n      setSection: setSection,\n      answer: answer,\n      setAnswer: setAnswer,\n      done: miniDone,\n      setDone: setMiniDone\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ttitpDFWZhsRAwoEVzRkY45+HgE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Menu","Connections","Strands","Vertex","Mini","jsxDEV","_jsxDEV","SECTION","App","_s","section","setSection","NONE","rows","setRows","noShow","setNoShow","finalLines","setFinalLines","pangramLines","setPangramLines","wordCount","setWordCount","foundWords","setFoundWords","foundPangram","setFoundPangram","answer","setAnswer","connectionsDone","setConnectionsDone","strandsDone","setStrandsDone","miniDone","setMiniDone","vertexDone","setVertexDone","lines","setLines","confirmedTriangles","setConfirmedTriangles","keycode","setKeyCode","className","style","width","window","innerWidth","children","LOCKED","Locked","passcode","setPasscode","fileName","_jsxFileName","lineNumber","columnNumber","CONNECTIONS","done","setDone","STRANDS","VERTEX","MINI","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/bday/src/App.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport Menu from \"./components/Menu\";\nimport Connections, { Row } from \"./components/connections/Connections\";\nimport Strands from \"./components/strands/Strands\";\nimport Vertex, { Triangle } from \"./components/vertex/Vertex\";\nimport Mini from \"./components/mini/Mini\";\n\nexport enum SECTION {\n  LOCKED,\n  NONE,\n  CONNECTIONS,\n  STRANDS,\n  SPELLINGBEE,\n  VERTEX,\n  MINI,\n  APP,\n}\n\nfunction App() {\n  const [section, setSection] = useState<SECTION>(SECTION.NONE);\n  const [rows, setRows] = useState<Row[]>([]);\n  const [noShow, setNoShow] = useState<string[]>([]);\n  const [finalLines, setFinalLines] = useState<any[]>([]);\n  const [pangramLines, setPangramLines] = useState<any[]>([]);\n  const [wordCount, setWordCount] = useState<number>(0);\n  const [foundWords, setFoundWords] = useState<string[]>([]);\n  const [foundPangram, setFoundPangram] = useState<string[]>([]);\n  const [answer, setAnswer] = useState<string[][]>([\n    [\".\", \".\", \"\", \"\", \"\", \".\", \".\"],\n    [\".\", \"\", \"\", \"\", \"\", \"\", \".\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\"\", \"\", \"\", \"\", \"\", \"\", \"\"],\n    [\".\", \"\", \"\", \"\", \"\", \"\", \".\"],\n    [\".\", \".\", \"\", \"\", \"\", \".\", \".\"],\n  ]);\n  const [connectionsDone, setConnectionsDone] = useState<boolean>(false);\n  const [strandsDone, setStrandsDone] = useState<boolean>(false);\n  const [miniDone, setMiniDone] = useState<boolean>(false);\n  const [vertexDone, setVertexDone] = useState<boolean>(false);\n  const [lines, setLines] = useState<number[][]>([]);\n  const [confirmedTriangles, setConfirmedTriangles] = useState<Triangle[]>([]);\n  const [keycode, setKeyCode] = useState(\"\");\n\n  return (\n    <div\n      className=\"App\"\n      style={{\n        width: window.innerWidth,\n      }}\n    >\n      {section == SECTION.LOCKED && (\n        <Locked\n          section={section}\n          setSection={setSection}\n          passcode={passcode}\n          setPasscode={setPasscode}\n        />\n      )}\n      {section == SECTION.NONE && (\n        <Menu\n          setSection={setSection}\n          connectionsDone={connectionsDone}\n          strandsDone={strandsDone}\n          miniDone={miniDone}\n          vertexDone={vertexDone}\n          keycode={keycode}\n          setKeyCode={setKeyCode}\n        />\n      )}\n      {section == SECTION.CONNECTIONS && (\n        <Connections\n          setSection={setSection}\n          rows={rows}\n          setRows={setRows}\n          noShow={noShow}\n          setNoShow={setNoShow}\n          done={connectionsDone}\n          setDone={setConnectionsDone}\n        />\n      )}\n      {section == SECTION.STRANDS && (\n        <Strands\n          setSection={setSection}\n          finalLines={finalLines}\n          setFinalLines={setFinalLines}\n          pangramLines={pangramLines}\n          setPangramLines={setPangramLines}\n          wordCount={wordCount}\n          setWordCount={setWordCount}\n          foundWords={foundWords}\n          setFoundWords={setFoundWords}\n          foundPangram={foundPangram}\n          setFoundPangram={setFoundPangram}\n          done={strandsDone}\n          setDone={setStrandsDone}\n        />\n      )}\n      {section == SECTION.VERTEX && (\n        <Vertex\n          setSection={setSection}\n          lines={lines}\n          setLines={setLines}\n          confirmedTriangles={confirmedTriangles}\n          setConfirmedTriangles={setConfirmedTriangles}\n          done={vertexDone}\n          setDone={setVertexDone}\n        />\n      )}\n      {section == SECTION.MINI && (\n        <Mini\n          setSection={setSection}\n          answer={answer}\n          setAnswer={setAnswer}\n          done={miniDone}\n          setDone={setMiniDone}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}