{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx\",\n  _s = $RefreshSig$();\nimport { SECTION } from \"../../App\";\nimport { HomeIcon } from \"../../icons/HomeIcon\";\nimport \"../../styles/vertex.css\";\nimport { useEffect, useState } from \"react\";\nimport { triangles } from \"./TriangleCoords\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const SCALE = 3;\nexport const X_OFFSET = 1100;\nexport const Y_OFFSET = 500;\nlet spots = [[533, 239], [552, 225], [546, 218], [568, 222], [558, 245], [581, 227], [573, 249], [573, 262], [588, 231], [589, 252], [603, 234], [615, 222], [629, 237], [648, 225], [653, 254], [670, 257], [683, 249], [670, 218], [688, 236], [706, 229], [690, 224], [620, 252], [576, 284], [585, 281], [593, 276], [597, 265], [599, 282], [615, 279], [600, 290], [610, 303], [590, 288], [589, 291], [631, 289], [634, 279], [645, 274], [651, 281], [639, 279], [639, 283], [644, 280], [642, 290], [641, 288], [674, 282], [656, 321], [611, 328], [584, 318], [625, 329], [629, 339], [637, 350], [626, 358], [623, 349], [609, 348], [603, 355], [599, 326], [607, 337], [597, 280], [591, 282], [597, 284], [688, 213]];\nspots = spots.map(spot => [spot[0] * SCALE - X_OFFSET, spot[1] * SCALE - Y_OFFSET]);\nexport default function Vertex({\n  setSection,\n  lines,\n  setLines,\n  confirmedTriangles,\n  setConfirmedTriangles,\n  done,\n  setDone\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [startCoords, setStartCoords] = useState([]);\n  const [endCoords, setEndCoords] = useState([]);\n  function handleMouseDown(e) {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] != 0 && coords[1] != 0) {\n      setStartCoords(coords);\n    }\n  }\n  function handleMouseMove(e) {\n    if (dragging) {\n      const coords = [e.clientX, e.clientY];\n      setEndCoords(coords);\n    }\n  }\n  function handleMouseUp() {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] != 0 && end[1] != 0) {\n        setLines([...lines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  }\n  function getClosestNode(x, y, threshold) {\n    let minDistX = threshold;\n    let minDistY = threshold;\n    let minX = 0,\n      minY = 0;\n    spots.filter(coord => x - coord[0] < threshold && y - coord[1] < threshold).map(coord => {\n      if (Math.abs(x - coord[0]) < minDistX && Math.abs(y - coord[1]) < minDistY && numberOfCircles(coord) > 0) {\n        minDistX = Math.abs(x - coord[0]);\n        minDistY = Math.abs(y - coord[1]);\n        minX = coord[0];\n        minY = coord[1];\n      }\n    });\n    return [minX, minY];\n  }\n  function allLines(triangle) {\n    if (!isConfirmed(triangle)) {\n      const returnVal = findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2).length > 0 && findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3).length > 0 && findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3).length > 0;\n      if (returnVal) {\n        setConfirmedTriangles([...confirmedTriangles, triangle]);\n        // const firstSpot = numberOfCircles([triangle.x1, triangle.y1]) == 0;\n        // const secondSpot = numberOfCircles([triangle.x2, triangle.y2]) == 0;\n        // const thirdSpot = numberOfCircles([triangle.x3, triangle.y3]) == 0;\n        // const condition = (line: number[]) =>\n        //   (!firstSpot ||\n        //     !secondSpot ||\n        //     !equalLines(\n        //       line,\n        //       findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2)[0]\n        //     )) &&\n        //   (!secondSpot ||\n        //     !thirdSpot ||\n        //     !equalLines(\n        //       line,\n        //       findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3)[0]\n        //     )) &&\n        //   (!firstSpot ||\n        //     !thirdSpot ||\n        //     !equalLines(\n        //       line,\n        //       findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3)[0]\n        //     ));\n        // setLines(lines.filter((line) => condition(line)));\n        setLines([]);\n      }\n      return returnVal;\n    }\n    return true;\n  }\n  function isConfirmed(triangle) {\n    return confirmedTriangles.filter(tri => tri.x1 === triangle.x1 && tri.y1 === triangle.y1 && tri.x2 === triangle.x2 && tri.y2 === triangle.y2 && tri.x3 === triangle.x3 && tri.y3 === triangle.y3 && tri.fill === triangle.fill).length > 0;\n  }\n  function equalLines(line1, line2) {\n    return line1[0] == line2[0] && line1[1] == line2[1] && line1[2] == line2[2] && line1[3] == line2[3];\n  }\n  function findLine(x1, y1, x2, y2) {\n    return lines.filter(coords => coords[0] == x1 && coords[1] == y1 && coords[2] == x2 && coords[3] == y2 || coords[0] == x2 && coords[1] == y2 && coords[2] == x1 && coords[3] == y1);\n  }\n  function undoLastLine() {\n    let lastLines = lines;\n    lastLines.pop();\n    setLines(lastLines);\n  }\n  function numberOfCircles(spot) {\n    let count = 0;\n    triangles.map(triangle => {\n      if (!isConfirmed(triangle)) {\n        if (triangle.x1 == spot[0] && triangle.y1 == spot[1]) {\n          count += 1;\n        }\n        if (triangle.x2 == spot[0] && triangle.y2 == spot[1]) {\n          count += 1;\n        }\n        if (triangle.x3 == spot[0] && triangle.y3 == spot[1]) {\n          count += 1;\n        }\n      }\n    });\n    return triangles.filter(triangle => !isConfirmed(triangle) && (triangle.x1 == spot[0] && triangle.y1 == spot[1] || triangle.x2 == spot[0] && triangle.y2 == spot[1] || triangle.x3 == spot[0] && triangle.y3 == spot[1])).length;\n  }\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleMouseDown);\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleMouseDown);\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [startCoords, endCoords]);\n  useEffect(() => {\n    if (triangles.filter(triangle => isConfirmed(triangle)).length == triangles.length) {\n      setDone(true);\n    }\n  }, [confirmedTriangles]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      onClick: () => setSection(SECTION.NONE),\n      children: HomeIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vertex-board\",\n      style: {\n        width: \"100%\",\n        height: window.innerHeight\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spots\",\n        children: [triangles.map(triangle => allLines(triangle) && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"strands-svg\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: triangle.x1.toString() + \",\" + triangle.y1.toString() + \" \" + triangle.x2.toString() + \",\" + triangle.y2.toString() + \" \" + triangle.x3.toString() + \",\" + triangle.y3.toString(),\n            style: {\n              fill: triangle.fill,\n              stroke: \"black\",\n              strokeWidth: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 21\n          }, this)\n        }, triangle.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 17\n        }, this)), spots.map(spot => numberOfCircles(spot) > 0 && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"vertex-svg\",\n          style: {\n            zIndex: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            r: numberOfCircles(spot) + 5,\n            cx: spot[0],\n            cy: spot[1],\n            fill: \"white\",\n            stroke: \"black\",\n            strokeWidth: \"0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: spot[0],\n            y: spot[1],\n            textAnchor: \"middle\",\n            alignmentBaseline: \"middle\",\n            fontSize: numberOfCircles(spot) + 3,\n            fill: \"black\",\n            children: numberOfCircles(spot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this)]\n        }, spot.toString() + Math.random() * 100, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this)), startCoords.length == 2 && endCoords.length == 2 && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"vertex-lines\",\n          style: {\n            zIndex: -5\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: startCoords[0],\n            y1: startCoords[1],\n            x2: endCoords[0],\n            y2: endCoords[1],\n            stroke: \"black\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 15\n          }, this)\n        }, startCoords.toString() + endCoords.toString() + Math.random() * 100, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), lines.map(line => /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"vertex-lines\",\n          style: {\n            zIndex: -5\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: line[0],\n            y1: line[1],\n            x2: line[2],\n            y2: line[3],\n            stroke: \"black\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)\n        }, startCoords.toString() + endCoords.toString() + Math.random() * 100, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: undoLastLine,\n          style: {\n            position: \"fixed\",\n            bottom: 10\n          },\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Vertex, \"oIx9mT8B2TgL3RTsnr9yiHX0ti8=\");\n_c = Vertex;\nvar _c;\n$RefreshReg$(_c, \"Vertex\");","map":{"version":3,"names":["SECTION","HomeIcon","useEffect","useState","triangles","jsxDEV","_jsxDEV","Fragment","_Fragment","SCALE","X_OFFSET","Y_OFFSET","spots","map","spot","Vertex","setSection","lines","setLines","confirmedTriangles","setConfirmedTriangles","done","setDone","_s","dragging","setDragging","startCoords","setStartCoords","endCoords","setEndCoords","handleMouseDown","e","preventDefault","coords","getClosestNode","clientX","clientY","handleMouseMove","handleMouseUp","length","end","x","y","threshold","minDistX","minDistY","minX","minY","filter","coord","Math","abs","numberOfCircles","allLines","triangle","isConfirmed","returnVal","findLine","x1","y1","x2","y2","x3","y3","tri","fill","equalLines","line1","line2","undoLastLine","lastLines","pop","count","document","addEventListener","removeEventListener","children","className","onClick","NONE","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","window","innerHeight","points","toString","stroke","strokeWidth","zIndex","r","cx","cy","textAnchor","alignmentBaseline","fontSize","random","line","position","bottom","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx"],"sourcesContent":["import { SECTION } from \"../../App\";\nimport { HomeIcon } from \"../../icons/HomeIcon\";\nimport \"../../styles/vertex.css\";\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport { triangles } from \"./TriangleCoords\";\n\nexport type Triangle = {\n  x1: number;\n  x2: number;\n  x3: number;\n  y1: number;\n  y2: number;\n  y3: number;\n  fill: string;\n};\n\ntype VertexProps = {\n  setSection: Dispatch<SetStateAction<SECTION>>;\n  lines: number[][];\n  setLines: Dispatch<SetStateAction<number[][]>>;\n  confirmedTriangles: Triangle[];\n  setConfirmedTriangles: Dispatch<SetStateAction<Triangle[]>>;\n  done: boolean;\n  setDone: Dispatch<SetStateAction<boolean>>;\n};\n\nexport const SCALE = 3;\nexport const X_OFFSET = 1100;\nexport const Y_OFFSET = 500;\n\nlet spots = [\n  [533, 239],\n  [552, 225],\n  [546, 218],\n  [568, 222],\n  [558, 245],\n  [581, 227],\n  [573, 249],\n  [573, 262],\n  [588, 231],\n  [589, 252],\n  [603, 234],\n  [615, 222],\n  [629, 237],\n  [648, 225],\n  [653, 254],\n  [670, 257],\n  [683, 249],\n  [670, 218],\n  [688, 236],\n  [706, 229],\n  [690, 224],\n  [620, 252],\n  [576, 284],\n  [585, 281],\n  [593, 276],\n  [597, 265],\n  [599, 282],\n  [615, 279],\n  [600, 290],\n  [610, 303],\n  [590, 288],\n  [589, 291],\n  [631, 289],\n  [634, 279],\n  [645, 274],\n  [651, 281],\n  [639, 279],\n  [639, 283],\n  [644, 280],\n  [642, 290],\n  [641, 288],\n  [674, 282],\n  [656, 321],\n  [611, 328],\n  [584, 318],\n  [625, 329],\n  [629, 339],\n  [637, 350],\n  [626, 358],\n  [623, 349],\n  [609, 348],\n  [603, 355],\n  [599, 326],\n  [607, 337],\n  [597, 280],\n  [591, 282],\n  [597, 284],\n  [688, 213],\n];\n\nspots = spots.map((spot) => [\n  spot[0] * SCALE - X_OFFSET,\n  spot[1] * SCALE - Y_OFFSET,\n]);\n\nexport default function Vertex({\n  setSection,\n  lines,\n  setLines,\n  confirmedTriangles,\n  setConfirmedTriangles,\n  done,\n  setDone,\n}: VertexProps) {\n  const [dragging, setDragging] = useState<boolean>(false);\n  const [startCoords, setStartCoords] = useState<number[]>([]);\n  const [endCoords, setEndCoords] = useState<number[]>([]);\n\n  function handleMouseDown(e: any) {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] != 0 && coords[1] != 0) {\n      setStartCoords(coords);\n    }\n  }\n\n  function handleMouseMove(e: any) {\n    if (dragging) {\n      const coords: number[] = [e.clientX, e.clientY];\n      setEndCoords(coords);\n    }\n  }\n\n  function handleMouseUp() {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] != 0 && end[1] != 0) {\n        setLines([...lines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  }\n\n  function getClosestNode(x: number, y: number, threshold: number) {\n    let minDistX = threshold;\n    let minDistY = threshold;\n    let minX: number = 0,\n      minY: number = 0;\n    spots\n      .filter((coord) => x - coord[0] < threshold && y - coord[1] < threshold)\n      .map((coord) => {\n        if (\n          Math.abs(x - coord[0]) < minDistX &&\n          Math.abs(y - coord[1]) < minDistY &&\n          numberOfCircles(coord) > 0\n        ) {\n          minDistX = Math.abs(x - coord[0]);\n          minDistY = Math.abs(y - coord[1]);\n          minX = coord[0];\n          minY = coord[1];\n        }\n      });\n\n    return [minX, minY];\n  }\n\n  function allLines(triangle: Triangle) {\n    if (!isConfirmed(triangle)) {\n      const returnVal =\n        findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2).length >\n          0 &&\n        findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3).length >\n          0 &&\n        findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3).length > 0;\n      if (returnVal) {\n        setConfirmedTriangles([...confirmedTriangles, triangle]);\n        // const firstSpot = numberOfCircles([triangle.x1, triangle.y1]) == 0;\n        // const secondSpot = numberOfCircles([triangle.x2, triangle.y2]) == 0;\n        // const thirdSpot = numberOfCircles([triangle.x3, triangle.y3]) == 0;\n        // const condition = (line: number[]) =>\n        //   (!firstSpot ||\n        //     !secondSpot ||\n        //     !equalLines(\n        //       line,\n        //       findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2)[0]\n        //     )) &&\n        //   (!secondSpot ||\n        //     !thirdSpot ||\n        //     !equalLines(\n        //       line,\n        //       findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3)[0]\n        //     )) &&\n        //   (!firstSpot ||\n        //     !thirdSpot ||\n        //     !equalLines(\n        //       line,\n        //       findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3)[0]\n        //     ));\n        // setLines(lines.filter((line) => condition(line)));\n        setLines([]);\n      }\n      return returnVal;\n    }\n    return true;\n  }\n\n  function isConfirmed(triangle: Triangle) {\n    return (\n      confirmedTriangles.filter(\n        (tri) =>\n          tri.x1 === triangle.x1 &&\n          tri.y1 === triangle.y1 &&\n          tri.x2 === triangle.x2 &&\n          tri.y2 === triangle.y2 &&\n          tri.x3 === triangle.x3 &&\n          tri.y3 === triangle.y3 &&\n          tri.fill === triangle.fill\n      ).length > 0\n    );\n  }\n\n  function equalLines(line1: number[], line2: number[]) {\n    return (\n      line1[0] == line2[0] &&\n      line1[1] == line2[1] &&\n      line1[2] == line2[2] &&\n      line1[3] == line2[3]\n    );\n  }\n\n  function findLine(x1: number, y1: number, x2: number, y2: number) {\n    return lines.filter(\n      (coords) =>\n        (coords[0] == x1 &&\n          coords[1] == y1 &&\n          coords[2] == x2 &&\n          coords[3] == y2) ||\n        (coords[0] == x2 &&\n          coords[1] == y2 &&\n          coords[2] == x1 &&\n          coords[3] == y1)\n    );\n  }\n\n  function undoLastLine() {\n    let lastLines = lines;\n    lastLines.pop();\n    setLines(lastLines);\n  }\n\n  function numberOfCircles(spot: number[]) {\n    let count = 0;\n    triangles.map((triangle) => {\n      if (!isConfirmed(triangle)) {\n        if (triangle.x1 == spot[0] && triangle.y1 == spot[1]) {\n          count += 1;\n        }\n        if (triangle.x2 == spot[0] && triangle.y2 == spot[1]) {\n          count += 1;\n        }\n        if (triangle.x3 == spot[0] && triangle.y3 == spot[1]) {\n          count += 1;\n        }\n      }\n    });\n\n    return triangles.filter(\n      (triangle) =>\n        !isConfirmed(triangle) &&\n        ((triangle.x1 == spot[0] && triangle.y1 == spot[1]) ||\n          (triangle.x2 == spot[0] && triangle.y2 == spot[1]) ||\n          (triangle.x3 == spot[0] && triangle.y3 == spot[1]))\n    ).length;\n  }\n\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", handleMouseDown);\n    document.addEventListener(\"mousemove\", handleMouseMove);\n    document.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handleMouseDown);\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n      document.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [startCoords, endCoords]);\n\n  useEffect(() => {\n    if (\n      triangles.filter((triangle) => isConfirmed(triangle)).length ==\n      triangles.length\n    ) {\n      setDone(true);\n    }\n  }, [confirmedTriangles]);\n\n  return (\n    <>\n      <div className=\"home\" onClick={() => setSection(SECTION.NONE)}>\n        {HomeIcon}\n      </div>\n      <div\n        className=\"vertex-board\"\n        style={{ width: \"100%\", height: window.innerHeight }}\n      >\n        <div className=\"spots\">\n          {triangles.map(\n            (triangle) =>\n              allLines(triangle) && (\n                <svg className=\"strands-svg\" key={triangle.toString()}>\n                  {\n                    <polygon\n                      points={\n                        triangle.x1.toString() +\n                        \",\" +\n                        triangle.y1.toString() +\n                        \" \" +\n                        triangle.x2.toString() +\n                        \",\" +\n                        triangle.y2.toString() +\n                        \" \" +\n                        triangle.x3.toString() +\n                        \",\" +\n                        triangle.y3.toString()\n                      }\n                      style={{\n                        fill: triangle.fill,\n                        stroke: \"black\",\n                        strokeWidth: \"0\",\n                      }}\n                    />\n                  }\n                </svg>\n              )\n          )}\n          {spots.map(\n            (spot) =>\n              numberOfCircles(spot) > 0 && (\n                <svg\n                  className=\"vertex-svg\"\n                  key={spot.toString() + Math.random() * 100}\n                  style={{ zIndex: 5 }}\n                >\n                  <circle\n                    r={numberOfCircles(spot) + 5}\n                    cx={spot[0]}\n                    cy={spot[1]}\n                    fill=\"white\"\n                    stroke=\"black\"\n                    strokeWidth=\"0.5\"\n                  />\n                  <text\n                    x={spot[0]}\n                    y={spot[1]}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"middle\"\n                    fontSize={numberOfCircles(spot) + 3}\n                    fill=\"black\"\n                  >\n                    {numberOfCircles(spot)}\n                  </text>\n                </svg>\n              )\n          )}\n          {startCoords.length == 2 && endCoords.length == 2 && (\n            <svg\n              className=\"vertex-lines\"\n              key={\n                startCoords.toString() +\n                endCoords.toString() +\n                Math.random() * 100\n              }\n              style={{ zIndex: -5 }}\n            >\n              <line\n                x1={startCoords[0]}\n                y1={startCoords[1]}\n                x2={endCoords[0]}\n                y2={endCoords[1]}\n                stroke=\"black\"\n                strokeWidth=\"1\"\n              />\n            </svg>\n          )}\n          {lines.map((line) => (\n            <svg\n              className=\"vertex-lines\"\n              key={\n                startCoords.toString() +\n                endCoords.toString() +\n                Math.random() * 100\n              }\n              style={{ zIndex: -5 }}\n            >\n              <line\n                x1={line[0]}\n                y1={line[1]}\n                x2={line[2]}\n                y2={line[3]}\n                stroke=\"black\"\n                strokeWidth=\"1\"\n              />\n            </svg>\n          ))}\n          <button\n            onClick={undoLastLine}\n            style={{ position: \"fixed\", bottom: 10 }}\n          >\n            Undo\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}