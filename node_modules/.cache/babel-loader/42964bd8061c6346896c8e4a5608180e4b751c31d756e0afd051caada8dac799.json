{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/components/mini/Mini.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport \"../../styles/mini.css\";\nimport { across, down } from \"./Clues\";\nimport { HomeIcon } from \"../../icons/HomeIcon\";\nimport { SECTION } from \"../../App\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Mini({\n  setSection,\n  answer,\n  setAnswer,\n  done,\n  setDone\n}) {\n  _s();\n  const [rowOrientation, setRowOrientation] = useState(true);\n  const finalAnswer = [[\".\", \".\", \"P\", \"E\", \"W\", \".\", \".\"], [\".\", \"B\", \"E\", \"M\", \"A\", \"D\", \".\"], [\"A\", \"R\", \"R\", \"A\", \"Y\", \"E\", \"D\"], [\"G\", \"O\", \"F\", \"I\", \"L\", \"E\", \"S\"], [\"E\", \"M\", \"U\", \"L\", \"A\", \"T\", \"E\"], [\".\", \"O\", \"M\", \"E\", \"N\", \"S\", \".\"], [\".\", \".\", \"E\", \"D\", \"D\", \".\", \".\"]];\n  useEffect(() => {\n    answer.filter((row, rowIndex) => row.filter((cell, index) => cell.toUpperCase() != finalAnswer[rowIndex][index]).length != 0).length == 0 && setDone(true);\n  }, [answer]);\n  const [focusedCell, setFocusedCell] = useState({\n    rowIndex: 0,\n    colIndex: 2\n  });\n  useEffect(() => {\n    console.log(focusedCell);\n    document.querySelectorAll(\".clue\").forEach(el => {\n      if (document.getElementById(el.id) != null) {\n        document.getElementById(el.id).style.backgroundColor = \"white\";\n      }\n    });\n    if (rowOrientation) {\n      const matchClue = across.filter(clue => clue.index[0] == focusedCell.rowIndex + 1);\n      if (matchClue.length > 0) {\n        document.getElementById(\"across-\" + matchClue[0].clueNumber).style.backgroundColor = \"#a7d8ff\";\n      }\n    } else {\n      const matchClue = down.filter(clue => clue.index[1] == focusedCell.rowIndex + 1);\n      if (matchClue.length > 0) {\n        document.getElementById(\"down-\" + matchClue[0].clueNumber).style.backgroundColor = \"#a7d8ff\";\n      }\n    }\n  }, [focusedCell]);\n  function handleChangeCell(e, rowIndex, index) {\n    let newFocusedCell = {\n      rowIndex: 0,\n      colIndex: 2\n    };\n    const rows = answer.length;\n    const cols = answer[0].length;\n    const isNotEdge = (r, c) => r >= 0 && r < rows && c >= 0 && c < cols;\n    switch (e.key) {\n      case \"Backspace\":\n        e.currentTarget.value = \"\";\n        if (index > 0) {\n          newFocusedCell = {\n            rowIndex,\n            colIndex: index - 1\n          };\n        }\n        break;\n      case \"Tab\":\n        e.preventDefault();\n        if (rowIndex < rows - 1) {\n          newFocusedCell = {\n            rowIndex: rowIndex + 1,\n            colIndex: 0\n          };\n        }\n        break;\n      case \"ArrowLeft\":\n        if (rowOrientation && index > 0) {\n          newFocusedCell = {\n            rowIndex,\n            colIndex: index - 1\n          };\n        } else if (!rowOrientation && rowIndex > 0) {\n          newFocusedCell = {\n            rowIndex: rowIndex - 1,\n            colIndex: index\n          };\n        }\n        break;\n      case \"ArrowRight\":\n        if (rowOrientation && index < cols - 1) {\n          newFocusedCell = {\n            rowIndex,\n            colIndex: index + 1\n          };\n        } else if (!rowOrientation && rowIndex < rows - 1) {\n          newFocusedCell = {\n            rowIndex: rowIndex + 1,\n            colIndex: index\n          };\n        }\n        break;\n      case \"ArrowUp\":\n        if (!rowOrientation && rowIndex > 0) {\n          newFocusedCell = {\n            rowIndex: rowIndex - 1,\n            colIndex: index\n          };\n        } else if (rowOrientation && index > 0) {\n          newFocusedCell = {\n            rowIndex,\n            colIndex: index - 1\n          };\n        }\n        break;\n      case \"ArrowDown\":\n        if (!rowOrientation && rowIndex < rows - 1) {\n          newFocusedCell = {\n            rowIndex: rowIndex + 1,\n            colIndex: index\n          };\n        } else if (rowOrientation && index < cols - 1) {\n          newFocusedCell = {\n            rowIndex,\n            colIndex: index + 1\n          };\n        }\n        break;\n      default:\n        if (/^[a-zA-Z]$/.test(e.key)) {\n          e.currentTarget.value = e.key.toUpperCase();\n          if (rowOrientation) {\n            if (index < cols - 1 && isNotEdge(rowIndex, index + 1)) {\n              newFocusedCell = {\n                rowIndex,\n                colIndex: index + 1\n              };\n            }\n          } else {\n            if (rowIndex < rows - 1 && isNotEdge(rowIndex + 1, index)) {\n              newFocusedCell = {\n                rowIndex: rowIndex + 1,\n                colIndex: index\n              };\n            }\n          }\n        }\n        break;\n    }\n    setFocusedCell(newFocusedCell);\n    saveAnswers(rowOrientation);\n  }\n  function saveAnswers(row) {\n    let newAnswers = [];\n    if (row) {\n      Array.from({\n        length: 7\n      }).map((_, colI) => {\n        let newRow = [];\n        Array.from({\n          length: 7\n        }).map((_, rowI) => {\n          var _document$getElementB;\n          const newVal = (_document$getElementB = document.getElementById((colI * 7 + rowI).toString())) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.value;\n          newVal == undefined ? newRow.push(\".\") : newVal == \"\" ? newRow.push(\"\") : newRow.push(newVal);\n        });\n        newAnswers.push(newRow);\n      });\n    } else {\n      Array.from({\n        length: 7\n      }).map((_, colI) => {\n        let newRow = [];\n        Array.from({\n          length: 7\n        }).map((_, rowI) => {\n          var _document$getElementB2;\n          const newVal = (_document$getElementB2 = document.getElementById((rowI * 7 + colI).toString())) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.value;\n          newVal == undefined ? newRow.push(\".\") : newVal == \"\" ? newRow.push(\"\") : newRow.push(newVal);\n        });\n        newAnswers.push(newRow);\n      });\n    }\n    setAnswer(newAnswers);\n  }\n  function handleRowToCol(e, rowIndex, index) {\n    setFocusedCell({\n      rowIndex,\n      colIndex: index\n    });\n    setRowOrientation(!rowOrientation);\n  }\n  function handleColToRow(e, rowIndex, colIndex) {\n    setFocusedCell({\n      rowIndex: colIndex,\n      colIndex: rowIndex\n    });\n    setRowOrientation(!rowOrientation);\n  }\n  function handleClueSelect(e) {}\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      onClick: () => setSection(SECTION.NONE),\n      children: HomeIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mini-body\",\n      style: {\n        height: window.innerHeight,\n        overflow: \"hidden\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clues across\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"clues-title\",\n          children: \"Across\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), across.map(clue => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clue\",\n          onClick: handleClueSelect,\n          id: \"across-\" + clue.clueNumber,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"clue-card-number\",\n            children: clue.clueNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"clue-text\",\n            children: clue.clue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mini-board\",\n        children: rowOrientation == true ? answer.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-row\",\n          children: row.map((cell, index) => cell == \".\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-container\",\n            style: index == 0 ? rowIndex == 0 ? {\n              backgroundColor: \"black\",\n              borderRightColor: \"dimgray\",\n              borderBottomColor: \"dimgray\"\n            } : {\n              backgroundColor: \"black\",\n              borderRightColor: \"dimgray\",\n              borderTopColor: \"dimgray\"\n            } : rowIndex == 0 ? {\n              backgroundColor: \"black\",\n              borderLeftColor: \"dimgray\",\n              borderBottomColor: \"dimgray\"\n            } : {\n              backgroundColor: \"black\",\n              borderLeftColor: \"dimgray\",\n              borderTopColor: \"dimgray\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-container\",\n            onDoubleClick: e => handleRowToCol(e, rowIndex, index),\n            onClick: e => setFocusedCell({\n              rowIndex,\n              colIndex: index\n            }),\n            children: [down.filter(clue => clue.index[0] == rowIndex + 1 && clue.index[1] == index + 1).length > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"clue-number\",\n              children: down.filter(clue => clue.index[0] == rowIndex + 1 && clue.index[1] == index + 1)[0].clueNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 27\n            }, this), across.filter(clue => clue.index[0] == rowIndex + 1 && clue.index[1] == index + 1).length > 0 && down.filter(clue => clue.index[0] == rowIndex + 1 && clue.index[1] == index + 1).length == 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"clue-number\",\n              children: across.filter(clue => clue.index[0] == rowIndex + 1 && clue.index[1] == index + 1)[0].clueNumber\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"cell\",\n              id: (rowIndex * 7 + index).toString(),\n              onKeyDown: e => handleChangeCell(e, rowIndex, index),\n              autoComplete: \"off\",\n              value: cell,\n              autoFocus: index == focusedCell.rowIndex && rowIndex == focusedCell.colIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 23\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)) : Array.from({\n          length: 7\n        }).map((_, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mini-col\",\n          children: answer.map((row, rowIndex) => row[colIndex] === \".\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-container\",\n            style: rowIndex === 0 ? colIndex === 0 ? {\n              backgroundColor: \"black\",\n              borderRightColor: \"dimgray\",\n              borderBottomColor: \"dimgray\"\n            } : {\n              backgroundColor: \"black\",\n              borderRightColor: \"dimgray\",\n              borderTopColor: \"dimgray\"\n            } : colIndex === 0 ? {\n              backgroundColor: \"black\",\n              borderLeftColor: \"dimgray\",\n              borderBottomColor: \"dimgray\"\n            } : {\n              backgroundColor: \"black\",\n              borderLeftColor: \"dimgray\",\n              borderTopColor: \"dimgray\"\n            }\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 23\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"cell-container\",\n            onClick: e => setFocusedCell({\n              rowIndex: colIndex,\n              colIndex: rowIndex\n            }),\n            onDoubleClick: e => handleColToRow(e, rowIndex, colIndex),\n            children: [down.filter(clue => clue.index[0] === rowIndex + 1 && clue.index[1] === colIndex + 1).map(clue => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"clue-number\",\n              children: clue.clueNumber\n            }, clue.clueNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this)), across.filter(clue => clue.index[0] === rowIndex + 1 && clue.index[1] === colIndex + 1).map(clue => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"clue-number\",\n              children: clue.clueNumber\n            }, clue.clueNumber, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 29\n            }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"cell\",\n              id: (colIndex * 7 + rowIndex).toString(),\n              onKeyDown: e => handleChangeCell(e, colIndex, rowIndex),\n              autoComplete: \"off\",\n              value: row[colIndex],\n              autoFocus: rowIndex == focusedCell.rowIndex && colIndex == focusedCell.colIndex\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 401,\n              columnNumber: 25\n            }, this)]\n          }, rowIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 23\n          }, this))\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"clues down\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"clues-title\",\n          children: \"Down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 421,\n          columnNumber: 11\n        }, this), down.map(clue => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"clue\",\n          onClick: handleClueSelect,\n          id: \"down-\" + clue.clueNumber,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"clue-card-number\",\n            children: clue.clueNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"clue-text\",\n            children: clue.clue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 423,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Mini, \"EUNsznVpKg5+wu2WSTo4LdUziHA=\");\n_c = Mini;\nvar _c;\n$RefreshReg$(_c, \"Mini\");","map":{"version":3,"names":["useEffect","useState","across","down","HomeIcon","SECTION","jsxDEV","_jsxDEV","Fragment","_Fragment","Mini","setSection","answer","setAnswer","done","setDone","_s","rowOrientation","setRowOrientation","finalAnswer","filter","row","rowIndex","cell","index","toUpperCase","length","focusedCell","setFocusedCell","colIndex","console","log","document","querySelectorAll","forEach","el","getElementById","id","style","backgroundColor","matchClue","clue","clueNumber","handleChangeCell","e","newFocusedCell","rows","cols","isNotEdge","r","c","key","currentTarget","value","preventDefault","test","saveAnswers","newAnswers","Array","from","map","_","colI","newRow","rowI","_document$getElementB","newVal","toString","undefined","push","_document$getElementB2","handleRowToCol","handleColToRow","handleClueSelect","children","className","onClick","NONE","fileName","_jsxFileName","lineNumber","columnNumber","height","window","innerHeight","overflow","borderRightColor","borderBottomColor","borderTopColor","borderLeftColor","onDoubleClick","onKeyDown","autoComplete","autoFocus","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/components/mini/Mini.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useState } from \"react\";\nimport \"../../styles/mini.css\";\nimport { createFileLevelUniqueName } from \"typescript\";\nimport { across, down } from \"./Clues\";\nimport { HomeIcon } from \"../../icons/HomeIcon\";\nimport { SECTION } from \"../../App\";\nimport { match } from \"assert\";\n\nexport type Clues = {\n  clueNumber: number;\n  clue: string;\n  index: number[];\n  answer: string;\n};\n\ntype MiniProps = {\n  setSection: Dispatch<SetStateAction<SECTION>>;\n  answer: string[][];\n  setAnswer: Dispatch<SetStateAction<string[][]>>;\n  done: boolean;\n  setDone: Dispatch<SetStateAction<boolean>>;\n};\n\nexport default function Mini({\n  setSection,\n  answer,\n  setAnswer,\n  done,\n  setDone,\n}: MiniProps) {\n  const [rowOrientation, setRowOrientation] = useState<boolean>(true);\n\n  const finalAnswer = [\n    [\".\", \".\", \"P\", \"E\", \"W\", \".\", \".\"],\n    [\".\", \"B\", \"E\", \"M\", \"A\", \"D\", \".\"],\n    [\"A\", \"R\", \"R\", \"A\", \"Y\", \"E\", \"D\"],\n    [\"G\", \"O\", \"F\", \"I\", \"L\", \"E\", \"S\"],\n    [\"E\", \"M\", \"U\", \"L\", \"A\", \"T\", \"E\"],\n    [\".\", \"O\", \"M\", \"E\", \"N\", \"S\", \".\"],\n    [\".\", \".\", \"E\", \"D\", \"D\", \".\", \".\"],\n  ];\n\n  useEffect(() => {\n    answer.filter(\n      (row, rowIndex) =>\n        row.filter(\n          (cell, index) => cell.toUpperCase() != finalAnswer[rowIndex][index]\n        ).length != 0\n    ).length == 0 && setDone(true);\n  }, [answer]);\n\n  const [focusedCell, setFocusedCell] = useState<{\n    rowIndex: number;\n    colIndex: number;\n  }>({ rowIndex: 0, colIndex: 2 });\n\n  useEffect(() => {\n    console.log(focusedCell);\n    document.querySelectorAll(\".clue\").forEach((el) => {\n      if (document.getElementById(el.id) != null) {\n        document.getElementById(el.id)!.style.backgroundColor = \"white\";\n      }\n    });\n    if (rowOrientation) {\n      const matchClue: Clues[] = across.filter(\n        (clue) => clue.index[0] == focusedCell.rowIndex + 1\n      );\n\n      if (matchClue.length > 0) {\n        document.getElementById(\n          \"across-\" + matchClue[0].clueNumber\n        )!.style.backgroundColor = \"#a7d8ff\";\n      }\n    } else {\n      const matchClue = down.filter(\n        (clue) => clue.index[1] == focusedCell.rowIndex + 1\n      );\n      if (matchClue.length > 0) {\n        document.getElementById(\n          \"down-\" + matchClue[0].clueNumber\n        )!.style.backgroundColor = \"#a7d8ff\";\n      }\n    }\n  }, [focusedCell]);\n\n  function handleChangeCell(e: any, rowIndex: number, index: number) {\n    let newFocusedCell: { rowIndex: number; colIndex: number } = {\n      rowIndex: 0,\n      colIndex: 2,\n    };\n    const rows = answer.length;\n    const cols = answer[0].length;\n\n    const isNotEdge = (r: number, c: number) =>\n      r >= 0 && r < rows && c >= 0 && c < cols;\n\n    switch (e.key) {\n      case \"Backspace\":\n        e.currentTarget.value = \"\";\n        if (index > 0) {\n          newFocusedCell = { rowIndex, colIndex: index - 1 };\n        }\n        break;\n      case \"Tab\":\n        e.preventDefault();\n        if (rowIndex < rows - 1) {\n          newFocusedCell = { rowIndex: rowIndex + 1, colIndex: 0 };\n        }\n        break;\n      case \"ArrowLeft\":\n        if (rowOrientation && index > 0) {\n          newFocusedCell = { rowIndex, colIndex: index - 1 };\n        } else if (!rowOrientation && rowIndex > 0) {\n          newFocusedCell = { rowIndex: rowIndex - 1, colIndex: index };\n        }\n        break;\n      case \"ArrowRight\":\n        if (rowOrientation && index < cols - 1) {\n          newFocusedCell = { rowIndex, colIndex: index + 1 };\n        } else if (!rowOrientation && rowIndex < rows - 1) {\n          newFocusedCell = { rowIndex: rowIndex + 1, colIndex: index };\n        }\n        break;\n      case \"ArrowUp\":\n        if (!rowOrientation && rowIndex > 0) {\n          newFocusedCell = { rowIndex: rowIndex - 1, colIndex: index };\n        } else if (rowOrientation && index > 0) {\n          newFocusedCell = { rowIndex, colIndex: index - 1 };\n        }\n        break;\n      case \"ArrowDown\":\n        if (!rowOrientation && rowIndex < rows - 1) {\n          newFocusedCell = { rowIndex: rowIndex + 1, colIndex: index };\n        } else if (rowOrientation && index < cols - 1) {\n          newFocusedCell = { rowIndex, colIndex: index + 1 };\n        }\n        break;\n      default:\n        if (/^[a-zA-Z]$/.test(e.key)) {\n          e.currentTarget.value = e.key.toUpperCase();\n          if (rowOrientation) {\n            if (index < cols - 1 && isNotEdge(rowIndex, index + 1)) {\n              newFocusedCell = { rowIndex, colIndex: index + 1 };\n            }\n          } else {\n            if (rowIndex < rows - 1 && isNotEdge(rowIndex + 1, index)) {\n              newFocusedCell = { rowIndex: rowIndex + 1, colIndex: index };\n            }\n          }\n        }\n        break;\n    }\n\n    setFocusedCell(newFocusedCell);\n    saveAnswers(rowOrientation);\n  }\n\n  function saveAnswers(row: boolean) {\n    let newAnswers: string[][] = [];\n    if (row) {\n      Array.from({ length: 7 }).map((_, colI) => {\n        let newRow: string[] = [];\n        Array.from({ length: 7 }).map((_, rowI) => {\n          const newVal = (\n            document.getElementById(\n              (colI * 7 + rowI).toString()\n            ) as HTMLInputElement\n          )?.value;\n          newVal == undefined\n            ? newRow.push(\".\")\n            : newVal == \"\"\n            ? newRow.push(\"\")\n            : newRow.push(newVal);\n        });\n        newAnswers.push(newRow);\n      });\n    } else {\n      Array.from({ length: 7 }).map((_, colI) => {\n        let newRow: string[] = [];\n        Array.from({ length: 7 }).map((_, rowI) => {\n          const newVal = (\n            document.getElementById(\n              (rowI * 7 + colI).toString()\n            ) as HTMLInputElement\n          )?.value;\n          newVal == undefined\n            ? newRow.push(\".\")\n            : newVal == \"\"\n            ? newRow.push(\"\")\n            : newRow.push(newVal);\n        });\n        newAnswers.push(newRow);\n      });\n    }\n    setAnswer(newAnswers);\n  }\n\n  function handleRowToCol(e: any, rowIndex: number, index: number) {\n    setFocusedCell({ rowIndex, colIndex: index });\n    setRowOrientation(!rowOrientation);\n  }\n\n  function handleColToRow(e: any, rowIndex: number, colIndex: number) {\n    setFocusedCell({\n      rowIndex: colIndex,\n      colIndex: rowIndex,\n    });\n    setRowOrientation(!rowOrientation);\n  }\n\n  function handleClueSelect(e: any) {}\n\n  return (\n    <>\n      <div className=\"home\" onClick={() => setSection(SECTION.NONE)}>\n        {HomeIcon}\n      </div>\n      <div\n        className=\"mini-body\"\n        style={{ height: window.innerHeight, overflow: \"hidden\" }}\n      >\n        <div className=\"clues across\">\n          <p className=\"clues-title\">Across</p>\n          {across.map((clue) => (\n            <div\n              className=\"clue\"\n              onClick={handleClueSelect}\n              id={\"across-\" + clue.clueNumber}\n            >\n              <p className=\"clue-card-number\">{clue.clueNumber}</p>\n              <p className=\"clue-text\">{clue.clue}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"mini-board\">\n          {rowOrientation == true\n            ? answer.map((row, rowIndex) => (\n                <div className=\"mini-row\">\n                  {row.map((cell, index) =>\n                    cell == \".\" ? (\n                      <div\n                        className={\"cell-container\"}\n                        style={\n                          index == 0\n                            ? rowIndex == 0\n                              ? {\n                                  backgroundColor: \"black\",\n                                  borderRightColor: \"dimgray\",\n                                  borderBottomColor: \"dimgray\",\n                                }\n                              : {\n                                  backgroundColor: \"black\",\n                                  borderRightColor: \"dimgray\",\n                                  borderTopColor: \"dimgray\",\n                                }\n                            : rowIndex == 0\n                            ? {\n                                backgroundColor: \"black\",\n                                borderLeftColor: \"dimgray\",\n                                borderBottomColor: \"dimgray\",\n                              }\n                            : {\n                                backgroundColor: \"black\",\n                                borderLeftColor: \"dimgray\",\n                                borderTopColor: \"dimgray\",\n                              }\n                        }\n                      ></div>\n                    ) : (\n                      <div\n                        className=\"cell-container\"\n                        onDoubleClick={(e) =>\n                          handleRowToCol(e, rowIndex, index)\n                        }\n                        onClick={(e) =>\n                          setFocusedCell({ rowIndex, colIndex: index })\n                        }\n                      >\n                        {down.filter(\n                          (clue: Clues) =>\n                            clue.index[0] == rowIndex + 1 &&\n                            clue.index[1] == index + 1\n                        ).length > 0 && (\n                          <p className=\"clue-number\">\n                            {\n                              down.filter(\n                                (clue: Clues) =>\n                                  clue.index[0] == rowIndex + 1 &&\n                                  clue.index[1] == index + 1\n                              )[0].clueNumber\n                            }\n                          </p>\n                        )}\n                        {across.filter(\n                          (clue: Clues) =>\n                            clue.index[0] == rowIndex + 1 &&\n                            clue.index[1] == index + 1\n                        ).length > 0 &&\n                          down.filter(\n                            (clue: Clues) =>\n                              clue.index[0] == rowIndex + 1 &&\n                              clue.index[1] == index + 1\n                          ).length == 0 && (\n                            <p className=\"clue-number\">\n                              {\n                                across.filter(\n                                  (clue: Clues) =>\n                                    clue.index[0] == rowIndex + 1 &&\n                                    clue.index[1] == index + 1\n                                )[0].clueNumber\n                              }\n                            </p>\n                          )}\n                        <input\n                          className=\"cell\"\n                          id={(rowIndex * 7 + index).toString()}\n                          onKeyDown={(e) =>\n                            handleChangeCell(e, rowIndex, index)\n                          }\n                          autoComplete=\"off\"\n                          value={cell}\n                          autoFocus={\n                            index == focusedCell.rowIndex &&\n                            rowIndex == focusedCell.colIndex\n                          }\n                        />\n                      </div>\n                    )\n                  )}\n                </div>\n              ))\n            : Array.from({ length: 7 }).map((_, colIndex) => (\n                <div className=\"mini-col\" key={colIndex}>\n                  {answer.map((row, rowIndex) =>\n                    row[colIndex] === \".\" ? (\n                      <div\n                        className={\"cell-container\"}\n                        key={rowIndex}\n                        style={\n                          rowIndex === 0\n                            ? colIndex === 0\n                              ? {\n                                  backgroundColor: \"black\",\n                                  borderRightColor: \"dimgray\",\n                                  borderBottomColor: \"dimgray\",\n                                }\n                              : {\n                                  backgroundColor: \"black\",\n                                  borderRightColor: \"dimgray\",\n                                  borderTopColor: \"dimgray\",\n                                }\n                            : colIndex === 0\n                            ? {\n                                backgroundColor: \"black\",\n                                borderLeftColor: \"dimgray\",\n                                borderBottomColor: \"dimgray\",\n                              }\n                            : {\n                                backgroundColor: \"black\",\n                                borderLeftColor: \"dimgray\",\n                                borderTopColor: \"dimgray\",\n                              }\n                        }\n                      ></div>\n                    ) : (\n                      <div\n                        className=\"cell-container\"\n                        key={rowIndex}\n                        onClick={(e) =>\n                          setFocusedCell({\n                            rowIndex: colIndex,\n                            colIndex: rowIndex,\n                          })\n                        }\n                        onDoubleClick={(e) =>\n                          handleColToRow(e, rowIndex, colIndex)\n                        }\n                      >\n                        {down\n                          .filter(\n                            (clue: Clues) =>\n                              clue.index[0] === rowIndex + 1 &&\n                              clue.index[1] === colIndex + 1\n                          )\n                          .map((clue) => (\n                            <p className=\"clue-number\" key={clue.clueNumber}>\n                              {clue.clueNumber}\n                            </p>\n                          ))}\n                        {across\n                          .filter(\n                            (clue: Clues) =>\n                              clue.index[0] === rowIndex + 1 &&\n                              clue.index[1] === colIndex + 1\n                          )\n                          .map((clue) => (\n                            <p className=\"clue-number\" key={clue.clueNumber}>\n                              {clue.clueNumber}\n                            </p>\n                          ))}\n                        <input\n                          className=\"cell\"\n                          id={(colIndex * 7 + rowIndex).toString()}\n                          onKeyDown={(e) =>\n                            handleChangeCell(e, colIndex, rowIndex)\n                          }\n                          autoComplete=\"off\"\n                          value={row[colIndex]}\n                          autoFocus={\n                            rowIndex == focusedCell.rowIndex &&\n                            colIndex == focusedCell.colIndex\n                          }\n                        />\n                      </div>\n                    )\n                  )}\n                </div>\n              ))}\n        </div>\n        <div className=\"clues down\">\n          <p className=\"clues-title\">Down</p>\n          {down.map((clue) => (\n            <div\n              className=\"clue\"\n              onClick={handleClueSelect}\n              id={\"down-\" + clue.clueNumber}\n            >\n              <p className=\"clue-card-number\">{clue.clueNumber}</p>\n              <p className=\"clue-text\">{clue.clue}</p>\n            </div>\n          ))}\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}