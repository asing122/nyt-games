{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/components/Strands.tsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { SECTION } from \"../App\";\nimport { HomeIcon } from \"../icons/HomeIcon\";\nimport \"../styles/strands.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Strands({\n  section,\n  setSection\n}) {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(\"\");\n  const [letterElems, setLetterElems] = useState([]);\n  const initial = [[\"D\", \"I\", \"P\", \"L\", \"O\", \"K\", \"I\", \"T\"], [\"S\", \"U\", \"I\", \"T\", \"S\", \"M\", \"A\", \"M\"], [\"I\", \"N\", \"E\", \"V\", \"N\", \"O\", \"C\", \"S\"], [\"E\", \"N\", \"C\", \"E\", \"G\", \"O\", \"O\", \"D\"], [\"W\", \"A\", \"T\", \"C\", \"H\", \"L\", \"I\", \"P\"], [\"T\", \"L\", \"I\", \"V\", \"E\", \"T\", \"S\", \"L\"], [\"S\", \"L\", \"L\", \"E\", \"S\", \"E\", \"R\", \"A\"], [\"A\", \"A\", \"O\", \"N\", \"G\", \"F\", \"S\", \"C\"], [\"P\", \"T\", \"H\", \"M\", \"Y\", \"A\", \"A\", \"E\"], [\"A\", \"N\", \"A\", \"C\", \"O\", \"F\", \"L\", \"L\"]];\n  const [dragging, setDragging] = useState(false);\n  const [draggedLetters, setDraggedLetters] = useState([]);\n  const [lastSelected, setLastSelected] = useState(\"\");\n  function handleMouseDown(e) {\n    e.preventDefault();\n    setDragging(true);\n    const letterId = e.currentTarget.id;\n    setSelectedWord(e.currentTarget.innerText);\n    setDraggedLetters([letterId]);\n    setLastSelected(letterId);\n    e.currentTarget.classList.add(\"strands-selected\");\n  }\n  function handleMouseOver(e) {\n    if (dragging) {\n      const letterId = e.currentTarget.id;\n      if (letterId === lastSelected) {\n        // Deselect the last letter\n        const updatedLetters = [...draggedLetters];\n        updatedLetters.pop();\n        setDraggedLetters(updatedLetters);\n        setLastSelected(updatedLetters[updatedLetters.length - 1] || \"\");\n        e.currentTarget.classList.remove(\"strands-selected\");\n      } else if (!draggedLetters.includes(letterId)) {\n        // Select the new letter\n        const updatedLetters = [...draggedLetters, letterId];\n        setDraggedLetters(updatedLetters);\n        setLastSelected(letterId);\n        e.currentTarget.classList.add(\"strands-selected\");\n      }\n    }\n  }\n  function handleMouseUp() {\n    setDragging(false);\n    const newWord = draggedLetters.map(id => {\n      var _document$getElementB;\n      return (_document$getElementB = document.getElementById(id)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.innerText;\n    }).join(\"\");\n    setSelectedWord(newWord);\n    checkWord();\n\n    // Clear selections and styles based on the correctness of the word\n    if (correct.includes(newWord)) {\n      draggedLetters.forEach(id => document.getElementById(id).style.backgroundColor = \"#aedfee\");\n    } else if (newWord === pangram) {\n      draggedLetters.forEach(id => document.getElementById(id).style.backgroundColor = \"#f8cb2c\");\n    }\n    setDraggedLetters([]);\n    setLastSelected(\"\");\n    document.querySelectorAll(\".strands-selected\").forEach(e => e.classList.remove(\"strands-selected\"));\n  }\n  const correct = [\"DIPLOMAT\", \"SUITS\", \"KIMSCONVENIENCE\", \"GOODPLACE\", \"PASTLIVES\", \"CHALLENGERS\", \"ANATOMYOFAFALL\"];\n  const pangram = \"WATCHLIST\";\n  function checkWord() {\n    const chosenWord = draggedLetters.map(id => {\n      var _document$getElementB2;\n      return (_document$getElementB2 = document.getElementById(id)) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.innerText;\n    }).join(\"\");\n    if (correct.filter(word => word == chosenWord).length == 1) {\n      letterElems.forEach(e => document.getElementById(e.id).style.backgroundColor = \"#aedfee\");\n      letterElems.forEach(e => e.classList.remove(\"strands-selected\"));\n      setSelectedWord(\"\");\n    } else if (chosenWord == pangram) {\n      letterElems.forEach(e => document.getElementById(e.id).style.backgroundColor = \"#f8cb2c\");\n      letterElems.forEach(e => e.classList.remove(\"strands-selected\"));\n      setSelectedWord(\"\");\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      onClick: () => setSection(SECTION.NONE),\n      children: HomeIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      style: {\n        height: window.innerHeight\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        readOnly: true,\n        value: selectedWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strands-board\",\n        onMouseLeave: () => setDragging(false),\n        children: initial.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strands-row\",\n          children: row.map((letter, colIndex) => {\n            const id = `${letter}-${rowIndex}-${colIndex}`;\n            return /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"letter\",\n              id: id,\n              onMouseDown: handleMouseDown,\n              onMouseOver: handleMouseOver,\n              onMouseUp: handleMouseUp,\n              children: letter\n            }, id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this);\n          })\n        }, rowIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"footer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Strands, \"qb9X3PIb3mkS3CoV5eaH9rUQlfQ=\");\n_c = Strands;\nvar _c;\n$RefreshReg$(_c, \"Strands\");","map":{"version":3,"names":["useState","SECTION","HomeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Strands","section","setSection","_s","selectedWord","setSelectedWord","letterElems","setLetterElems","initial","dragging","setDragging","draggedLetters","setDraggedLetters","lastSelected","setLastSelected","handleMouseDown","e","preventDefault","letterId","currentTarget","id","innerText","classList","add","handleMouseOver","updatedLetters","pop","length","remove","includes","handleMouseUp","newWord","map","_document$getElementB","document","getElementById","join","checkWord","correct","forEach","style","backgroundColor","pangram","querySelectorAll","chosenWord","_document$getElementB2","filter","word","children","className","onClick","NONE","fileName","_jsxFileName","lineNumber","columnNumber","height","window","innerHeight","readOnly","value","onMouseLeave","row","rowIndex","letter","colIndex","onMouseDown","onMouseOver","onMouseUp","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/components/Strands.tsx"],"sourcesContent":["import { useState } from \"react\";\nimport { MenuProps, SECTION } from \"../App\";\nimport { HomeIcon } from \"../icons/HomeIcon\";\nimport \"../styles/strands.css\";\n\nexport default function Strands({ section, setSection }: MenuProps) {\n  const [selectedWord, setSelectedWord] = useState<string>(\"\");\n  const [letterElems, setLetterElems] = useState<any[]>([]);\n  const initial = [\n    [\"D\", \"I\", \"P\", \"L\", \"O\", \"K\", \"I\", \"T\"],\n    [\"S\", \"U\", \"I\", \"T\", \"S\", \"M\", \"A\", \"M\"],\n    [\"I\", \"N\", \"E\", \"V\", \"N\", \"O\", \"C\", \"S\"],\n    [\"E\", \"N\", \"C\", \"E\", \"G\", \"O\", \"O\", \"D\"],\n    [\"W\", \"A\", \"T\", \"C\", \"H\", \"L\", \"I\", \"P\"],\n    [\"T\", \"L\", \"I\", \"V\", \"E\", \"T\", \"S\", \"L\"],\n    [\"S\", \"L\", \"L\", \"E\", \"S\", \"E\", \"R\", \"A\"],\n    [\"A\", \"A\", \"O\", \"N\", \"G\", \"F\", \"S\", \"C\"],\n    [\"P\", \"T\", \"H\", \"M\", \"Y\", \"A\", \"A\", \"E\"],\n    [\"A\", \"N\", \"A\", \"C\", \"O\", \"F\", \"L\", \"L\"],\n  ];\n\n  const [dragging, setDragging] = useState<boolean>(false);\n  const [draggedLetters, setDraggedLetters] = useState<string[]>([]);\n  const [lastSelected, setLastSelected] = useState<string>(\"\");\n\n  function handleMouseDown(\n    e: React.MouseEvent<HTMLParagraphElement, MouseEvent>\n  ) {\n    e.preventDefault();\n    setDragging(true);\n    const letterId = e.currentTarget.id;\n    setSelectedWord(e.currentTarget.innerText);\n    setDraggedLetters([letterId]);\n    setLastSelected(letterId);\n    e.currentTarget.classList.add(\"strands-selected\");\n  }\n\n  function handleMouseOver(\n    e: React.MouseEvent<HTMLParagraphElement, MouseEvent>\n  ) {\n    if (dragging) {\n      const letterId = e.currentTarget.id;\n      if (letterId === lastSelected) {\n        // Deselect the last letter\n        const updatedLetters = [...draggedLetters];\n        updatedLetters.pop();\n        setDraggedLetters(updatedLetters);\n        setLastSelected(updatedLetters[updatedLetters.length - 1] || \"\");\n        e.currentTarget.classList.remove(\"strands-selected\");\n      } else if (!draggedLetters.includes(letterId)) {\n        // Select the new letter\n        const updatedLetters = [...draggedLetters, letterId];\n        setDraggedLetters(updatedLetters);\n        setLastSelected(letterId);\n        e.currentTarget.classList.add(\"strands-selected\");\n      }\n    }\n  }\n\n  function handleMouseUp() {\n    setDragging(false);\n    const newWord = draggedLetters\n      .map((id) => document.getElementById(id)?.innerText)\n      .join(\"\");\n    setSelectedWord(newWord);\n\n    checkWord();\n\n    // Clear selections and styles based on the correctness of the word\n    if (correct.includes(newWord)) {\n      draggedLetters.forEach(\n        (id) => (document.getElementById(id)!.style.backgroundColor = \"#aedfee\")\n      );\n    } else if (newWord === pangram) {\n      draggedLetters.forEach(\n        (id) => (document.getElementById(id)!.style.backgroundColor = \"#f8cb2c\")\n      );\n    }\n    setDraggedLetters([]);\n    setLastSelected(\"\");\n    document\n      .querySelectorAll(\".strands-selected\")\n      .forEach((e) => e.classList.remove(\"strands-selected\"));\n  }\n  const correct = [\n    \"DIPLOMAT\",\n    \"SUITS\",\n    \"KIMSCONVENIENCE\",\n    \"GOODPLACE\",\n    \"PASTLIVES\",\n    \"CHALLENGERS\",\n    \"ANATOMYOFAFALL\",\n  ];\n\n  const pangram = \"WATCHLIST\";\n\n  function checkWord() {\n    const chosenWord = draggedLetters\n      .map((id) => document.getElementById(id)?.innerText)\n      .join(\"\");\n    if (correct.filter((word) => word == chosenWord).length == 1) {\n      letterElems.forEach(\n        (e) =>\n          (document.getElementById(e.id)!.style.backgroundColor = \"#aedfee\")\n      );\n      letterElems.forEach((e) => e.classList.remove(\"strands-selected\"));\n      setSelectedWord(\"\");\n    } else if (chosenWord == pangram) {\n      letterElems.forEach(\n        (e) =>\n          (document.getElementById(e.id)!.style.backgroundColor = \"#f8cb2c\")\n      );\n      letterElems.forEach((e) => e.classList.remove(\"strands-selected\"));\n      setSelectedWord(\"\");\n    }\n  }\n\n  return (\n    <>\n      <div className=\"home\" onClick={() => setSection(SECTION.NONE)}>\n        {HomeIcon}\n      </div>\n      <div className=\"body\" style={{ height: window.innerHeight }}>\n        <input readOnly value={selectedWord} />\n        <div className=\"strands-board\" onMouseLeave={() => setDragging(false)}>\n          {initial.map((row, rowIndex) => (\n            <div className=\"strands-row\" key={rowIndex}>\n              {row.map((letter, colIndex) => {\n                const id = `${letter}-${rowIndex}-${colIndex}`;\n                return (\n                  <p\n                    className=\"letter\"\n                    id={id}\n                    key={id}\n                    onMouseDown={handleMouseDown}\n                    onMouseOver={handleMouseOver}\n                    onMouseUp={handleMouseUp}\n                  >\n                    {letter}\n                  </p>\n                );\n              })}\n            </div>\n          ))}\n        </div>\n        <div className=\"footer\"></div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}