{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport throttle from \"lodash.throttle\";\nimport \"./vertex.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Vertex({\n  setSection,\n  lines,\n  setLines,\n  confirmedTriangles,\n  setConfirmedTriangles\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [startCoords, setStartCoords] = useState([]);\n  const [endCoords, setEndCoords] = useState([]);\n  const handleMouseDown = e => {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] !== 0 && coords[1] !== 0) {\n      setStartCoords(coords);\n    }\n  };\n  const handleMouseMove = useCallback(throttle(e => {\n    if (dragging) {\n      setEndCoords([e.clientX, e.clientY]);\n    }\n  }, 50),\n  // Throttle to 50ms\n  [dragging]);\n  const handleMouseUp = () => {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] !== 0 && end[1] !== 0) {\n        setLines(prevLines => [...prevLines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  };\n  const getClosestNode = (x, y, threshold) => {\n    // Optimize this function for faster calculations.\n    let minDist = Infinity;\n    let closestNode = [0, 0];\n    for (let spot of spots) {\n      const [sx, sy] = spot;\n      const dist = Math.sqrt((x - sx) ** 2 + (y - sy) ** 2);\n      if (dist < threshold && dist < minDist) {\n        minDist = dist;\n        closestNode = [sx, sy];\n      }\n    }\n    return closestNode;\n  };\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [handleMouseMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vertex-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_s(Vertex, \"mcQSiCvCYIzmKUZTLQuF7vyEI0I=\");\n_c = Vertex;\nvar _c;\n$RefreshReg$(_c, \"Vertex\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","throttle","jsxDEV","_jsxDEV","Vertex","setSection","lines","setLines","confirmedTriangles","setConfirmedTriangles","_s","dragging","setDragging","startCoords","setStartCoords","endCoords","setEndCoords","handleMouseDown","e","preventDefault","coords","getClosestNode","clientX","clientY","handleMouseMove","handleMouseUp","length","end","prevLines","x","y","threshold","minDist","Infinity","closestNode","spot","spots","sx","sy","dist","Math","sqrt","window","addEventListener","removeEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport throttle from \"lodash.throttle\";\nimport \"./vertex.css\";\n\nexport default function Vertex({\n  setSection,\n  lines,\n  setLines,\n  confirmedTriangles,\n  setConfirmedTriangles,\n}) {\n  const [dragging, setDragging] = useState(false);\n  const [startCoords, setStartCoords] = useState([]);\n  const [endCoords, setEndCoords] = useState([]);\n\n  const handleMouseDown = (e) => {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] !== 0 && coords[1] !== 0) {\n      setStartCoords(coords);\n    }\n  };\n\n  const handleMouseMove = useCallback(\n    throttle((e) => {\n      if (dragging) {\n        setEndCoords([e.clientX, e.clientY]);\n      }\n    }, 50), // Throttle to 50ms\n    [dragging]\n  );\n\n  const handleMouseUp = () => {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] !== 0 && end[1] !== 0) {\n        setLines((prevLines) => [...prevLines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  };\n\n  const getClosestNode = (x, y, threshold) => {\n    // Optimize this function for faster calculations.\n    let minDist = Infinity;\n    let closestNode = [0, 0];\n    for (let spot of spots) {\n      const [sx, sy] = spot;\n      const dist = Math.sqrt((x - sx) ** 2 + (y - sy) ** 2);\n      if (dist < threshold && dist < minDist) {\n        minDist = dist;\n        closestNode = [sx, sy];\n      }\n    }\n    return closestNode;\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [handleMouseMove]);\n\n  return (\n    <div className=\"vertex-container\">{/* Render triangles and lines */}</div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}