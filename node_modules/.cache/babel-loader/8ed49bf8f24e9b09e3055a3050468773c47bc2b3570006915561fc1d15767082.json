{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx\",\n  _s = $RefreshSig$();\nimport \"../../styles/vertex.css\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SCALE = 3;\nconst X_OFFSET = 1100;\nconst Y_OFFSET = 500;\nlet spots = [[533, 239], [552, 225], [546, 218], [568, 222], [558, 245], [581, 227], [573, 249], [573, 262], [588, 231], [589, 252], [603, 234], [615, 222], [629, 237], [648, 225], [653, 254], [670, 257], [683, 249], [670, 218], [688, 236], [706, 229], [690, 224], [620, 252], [576, 284], [585, 281], [593, 276], [597, 265], [599, 282], [615, 279], [600, 290], [610, 303], [590, 288], [589, 291], [631, 289], [634, 279], [645, 274], [651, 281], [639, 279], [639, 283], [644, 280], [642, 290], [641, 288], [674, 282], [656, 321], [611, 328], [584, 318], [625, 329], [629, 339], [637, 350], [626, 358], [623, 349], [609, 348], [603, 355], [599, 326], [607, 337], [597, 280], [591, 282], [597, 284]];\nspots = spots.map(spot => [spot[0] * SCALE - X_OFFSET, spot[1] * SCALE - Y_OFFSET]);\nlet triangles = [/* EARS */\n{\n  x1: 533,\n  y1: 239,\n  x2: 552,\n  y2: 225,\n  x3: 546,\n  y3: 218,\n  fill: \"#151110\"\n}, {\n  x1: 568,\n  y1: 222,\n  x2: 552,\n  y2: 225,\n  x3: 546,\n  y3: 218,\n  fill: \"#231E20\"\n}, {\n  x1: 568,\n  y1: 222,\n  x2: 552,\n  y2: 225,\n  x3: 558,\n  y3: 245,\n  fill: \"#151110\"\n}, {\n  x1: 568,\n  y1: 222,\n  x2: 558,\n  y2: 245,\n  x3: 581,\n  y3: 227,\n  fill: \"#231E20\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 558,\n  y2: 245,\n  x3: 581,\n  y3: 227,\n  fill: \"#151110\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 558,\n  y2: 245,\n  x3: 573,\n  y3: 262,\n  fill: \"#231E20\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 588,\n  y2: 231,\n  x3: 581,\n  y3: 227,\n  fill: \"#231E20\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 588,\n  y2: 231,\n  x3: 573,\n  y3: 262,\n  fill: \"#151110\"\n}, {\n  x1: 683,\n  y1: 249,\n  x2: 670,\n  y2: 257,\n  x3: 648,\n  y3: 225,\n  fill: \"#231E20\"\n}, {\n  x1: 683,\n  y1: 249,\n  x2: 670,\n  y2: 218,\n  x3: 648,\n  y3: 225,\n  fill: \"#151110\"\n}, {\n  x1: 683,\n  y1: 249,\n  x2: 670,\n  y2: 218,\n  x3: 688,\n  y3: 236,\n  fill: \"#231E20\"\n}, {\n  x1: 690,\n  y1: 224,\n  x2: 688,\n  y2: 213,\n  x3: 670,\n  y3: 218,\n  fill: \"#231E20\"\n}, {\n  x1: 690,\n  y1: 224,\n  x2: 688,\n  y2: 236,\n  x3: 670,\n  y3: 218,\n  fill: \"#151110\"\n}, {\n  x1: 690,\n  y1: 224,\n  x2: 688,\n  y2: 213,\n  x3: 706,\n  y3: 229,\n  fill: \"#151110\"\n}, /* BODY */\n{\n  x1: 589,\n  y1: 252,\n  x2: 588,\n  y2: 231,\n  x3: 573,\n  y3: 262,\n  fill: \"#32302D\"\n}, {\n  x1: 589,\n  y1: 252,\n  x2: 588,\n  y2: 231,\n  x3: 603,\n  y3: 234,\n  fill: \"#6A6462\"\n}, {\n  x1: 615,\n  y1: 222,\n  x2: 588,\n  y2: 231,\n  x3: 603,\n  y3: 234,\n  fill: \"#32302D\"\n}, {\n  x1: 615,\n  y1: 222,\n  x2: 629,\n  y2: 237,\n  x3: 603,\n  y3: 234,\n  fill: \"#6A6462\"\n}, {\n  x1: 615,\n  y1: 222,\n  x2: 629,\n  y2: 237,\n  x3: 648,\n  y3: 225,\n  fill: \"#32302D\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 629,\n  y2: 237,\n  x3: 648,\n  y3: 225,\n  fill: \"#6A6462\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 670,\n  y2: 257,\n  x3: 648,\n  y3: 225,\n  fill: \"#32302D\"\n}, {\n  x1: 589,\n  y1: 252,\n  x2: 629,\n  y2: 237,\n  x3: 603,\n  y3: 234,\n  fill: \"#32302D\"\n}, {\n  x1: 589,\n  y1: 252,\n  x2: 629,\n  y2: 237,\n  x3: 620,\n  y3: 252,\n  fill: \"#141213\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 629,\n  y2: 237,\n  x3: 620,\n  y3: 252,\n  fill: \"#32302D\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 589,\n  y2: 252,\n  x3: 573,\n  y3: 262,\n  fill: \"#231E20\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 589,\n  y2: 252,\n  x3: 585,\n  y3: 281,\n  fill: \"#6A6462\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 589,\n  y2: 252,\n  x3: 585,\n  y3: 281,\n  fill: \"#231E20\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 589,\n  y2: 252,\n  x3: 597,\n  y3: 265,\n  fill: \"#141213\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 589,\n  y2: 252,\n  x3: 597,\n  y3: 265,\n  fill: \"#32302D\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 599,\n  y2: 282,\n  x3: 597,\n  y3: 265,\n  fill: \"#32302D\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 599,\n  y2: 282,\n  x3: 597,\n  y3: 265,\n  fill: \"#141213\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 599,\n  y2: 282,\n  x3: 615,\n  y3: 279,\n  fill: \"#32302D\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 599,\n  y2: 282,\n  x3: 615,\n  y3: 279,\n  fill: \"#141213\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 653,\n  y2: 254,\n  x3: 615,\n  y3: 279,\n  fill: \"#141213\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 610,\n  y2: 303,\n  x3: 615,\n  y3: 279,\n  fill: \"#32302D\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 610,\n  y2: 303,\n  x3: 615,\n  y3: 279,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 634,\n  y2: 279,\n  x3: 615,\n  y3: 279,\n  fill: \"#32302D\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 634,\n  y2: 279,\n  x3: 615,\n  y3: 279,\n  fill: \"#6A6462\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 634,\n  y2: 279,\n  x3: 645,\n  y3: 274,\n  fill: \"#32302D\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 670,\n  y2: 257,\n  x3: 645,\n  y3: 274,\n  fill: \"#141213\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 670,\n  y2: 257,\n  x3: 645,\n  y3: 274,\n  fill: \"#32302D\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 670,\n  y2: 257,\n  x3: 674,\n  y3: 282,\n  fill: \"#141213\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 656,\n  y2: 321,\n  x3: 674,\n  y3: 282,\n  fill: \"#32302D\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 656,\n  y2: 321,\n  x3: 642,\n  y3: 290,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 656,\n  y2: 321,\n  x3: 642,\n  y3: 290,\n  fill: \"#32302D\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 611,\n  y2: 328,\n  x3: 610,\n  y3: 303,\n  fill: \"#6A6462\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 611,\n  y2: 328,\n  x3: 625,\n  y3: 329,\n  fill: \"#141213\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 611,\n  y2: 328,\n  x3: 610,\n  y3: 303,\n  fill: \"#141213\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 611,\n  y2: 328,\n  x3: 589,\n  y3: 291,\n  fill: \"#32302D\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 611,\n  y2: 328,\n  x3: 589,\n  y3: 291,\n  fill: \"#6A6462\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 589,\n  y2: 291,\n  x3: 585,\n  y3: 281,\n  fill: \"#32302D\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 629,\n  y2: 339,\n  x3: 656,\n  y3: 321,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 625,\n  y2: 329,\n  x3: 629,\n  y3: 339,\n  fill: \"#6A6462\"\n}, {\n  x1: 637,\n  y1: 350,\n  x2: 629,\n  y2: 339,\n  x3: 656,\n  y3: 321,\n  fill: \"#32302D\"\n}, {\n  x1: 637,\n  y1: 350,\n  x2: 629,\n  y2: 339,\n  x3: 626,\n  y3: 358,\n  fill: \"#141213\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 629,\n  y2: 339,\n  x3: 626,\n  y3: 358,\n  fill: \"#32302D\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 609,\n  y2: 348,\n  x3: 626,\n  y3: 358,\n  fill: \"#141213\"\n}, {\n  x1: 603,\n  y1: 355,\n  x2: 609,\n  y2: 348,\n  x3: 626,\n  y3: 358,\n  fill: \"#32302D\"\n}, {\n  x1: 603,\n  y1: 355,\n  x2: 609,\n  y2: 348,\n  x3: 584,\n  y3: 318,\n  fill: \"#6A6462\"\n}, {\n  x1: 599,\n  y1: 326,\n  x2: 609,\n  y2: 348,\n  x3: 584,\n  y3: 318,\n  fill: \"#141213\"\n}, {\n  x1: 599,\n  y1: 326,\n  x2: 609,\n  y2: 348,\n  x3: 607,\n  y3: 337,\n  fill: \"#32302D\"\n}, {\n  x1: 599,\n  y1: 326,\n  x2: 611,\n  y2: 328,\n  x3: 607,\n  y3: 337,\n  fill: \"#141213\"\n}, {\n  x1: 584,\n  y1: 318,\n  x2: 611,\n  y2: 328,\n  x3: 599,\n  y3: 326,\n  fill: \"#32302D\"\n}, {\n  x1: 584,\n  y1: 318,\n  x2: 611,\n  y2: 328,\n  x3: 576,\n  y3: 284,\n  fill: \"#32302D\"\n}, /* EYES */\n{\n  x1: 590,\n  y1: 288,\n  x2: 589,\n  y2: 291,\n  x3: 585,\n  y3: 281,\n  fill: \"#736B68\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 589,\n  y2: 291,\n  x3: 600,\n  y3: 290,\n  fill: \"#736B68\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 593,\n  y2: 276,\n  x3: 585,\n  y3: 281,\n  fill: \"#3C2F25\"\n}, {\n  x1: 597,\n  y1: 280,\n  x2: 591,\n  y2: 282,\n  x3: 597,\n  y3: 284,\n  fill: \"#141213\"\n}, {\n  x1: 597,\n  y1: 280,\n  x2: 599,\n  y2: 282,\n  x3: 597,\n  y3: 284,\n  fill: \"#3C2F25\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 591,\n  y2: 282,\n  x3: 597,\n  y3: 284,\n  fill: \"#3C2F25\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 591,\n  y2: 282,\n  x3: 597,\n  y3: 280,\n  fill: \"#3C2F25\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 600,\n  y2: 290,\n  x3: 599,\n  y3: 282,\n  fill: \"#3C2F25\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 642,\n  y2: 290,\n  x3: 641,\n  y3: 288,\n  fill: \"#736B68\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 642,\n  y2: 290,\n  x3: 641,\n  y3: 288,\n  fill: \"#736B68\"\n}, {\n  x1: 639,\n  y1: 279,\n  x2: 639,\n  y2: 283,\n  x3: 644,\n  y3: 280,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 634,\n  y2: 279,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 641,\n  y2: 288,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 641,\n  y2: 288,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 644,\n  y2: 280,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 645,\n  y1: 274,\n  x2: 639,\n  y2: 279,\n  x3: 634,\n  y3: 279,\n  fill: \"#3C2F25\"\n}, {\n  x1: 645,\n  y1: 274,\n  x2: 639,\n  y2: 279,\n  x3: 644,\n  y3: 280,\n  fill: \"#3C2F25\"\n}, {\n  x1: 645,\n  y1: 274,\n  x2: 651,\n  y2: 281,\n  x3: 644,\n  y3: 280,\n  fill: \"#3C2F25\"\n}, {\n  x1: 639,\n  y1: 279,\n  x2: 639,\n  y2: 283,\n  x3: 634,\n  y3: 279,\n  fill: \"#3C2F25\"\n}, /* NOSE */\n{\n  x1: 607,\n  y1: 337,\n  x2: 625,\n  y2: 329,\n  x3: 611,\n  y3: 328,\n  fill: \"#32302D\"\n}, {\n  x1: 607,\n  y1: 337,\n  x2: 625,\n  y2: 329,\n  x3: 609,\n  y3: 348,\n  fill: \"#130C0A\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 625,\n  y2: 329,\n  x3: 609,\n  y3: 348,\n  fill: \"#130C0A\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 625,\n  y2: 329,\n  x3: 629,\n  y3: 339,\n  fill: \"#130C0A\"\n}];\ntriangles = triangles.map(tri => {\n  return {\n    x1: tri.x1 * SCALE - X_OFFSET,\n    y1: tri.y1 * SCALE - Y_OFFSET,\n    x2: tri.x2 * SCALE - X_OFFSET,\n    y2: tri.y2 * SCALE - Y_OFFSET,\n    x3: tri.x3 * SCALE - X_OFFSET,\n    y3: tri.y3 * SCALE - Y_OFFSET,\n    fill: tri.fill\n  };\n});\nexport default function Vertex({\n  setSection,\n  lines,\n  setLines,\n  confirmedTriangles,\n  setConfirmedTriangles\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [startCoords, setStartCoords] = useState([]);\n  const [endCoords, setEndCoords] = useState([]);\n  const handleMouseDown = e => {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] !== 0 && coords[1] !== 0) {\n      setStartCoords(coords);\n    }\n  };\n  const handleMouseMove = useCallback(throttle(e => {\n    if (dragging) {\n      setEndCoords([e.clientX, e.clientY]);\n    }\n  }, 50),\n  // Throttle to 50ms\n  [dragging]);\n  const handleMouseUp = () => {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] !== 0 && end[1] !== 0) {\n        setLines(prevLines => [...prevLines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  };\n  const getClosestNode = (x, y, threshold) => {\n    // Optimize this function for faster calculations.\n    let minDist = Infinity;\n    let closestNode = [0, 0];\n    for (let spot of spots) {\n      const [sx, sy] = spot;\n      const dist = Math.sqrt((x - sx) ** 2 + (y - sy) ** 2);\n      if (dist < threshold && dist < minDist) {\n        minDist = dist;\n        closestNode = [sx, sy];\n      }\n    }\n    return closestNode;\n  };\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [handleMouseMove]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"vertex-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n}\n_s(Vertex, \"mcQSiCvCYIzmKUZTLQuF7vyEI0I=\");\n_c = Vertex;\nvar _c;\n$RefreshReg$(_c, \"Vertex\");","map":{"version":3,"names":["useEffect","useState","jsxDEV","_jsxDEV","SCALE","X_OFFSET","Y_OFFSET","spots","map","spot","triangles","x1","y1","x2","y2","x3","y3","fill","tri","Vertex","setSection","lines","setLines","confirmedTriangles","setConfirmedTriangles","_s","dragging","setDragging","startCoords","setStartCoords","endCoords","setEndCoords","handleMouseDown","e","preventDefault","coords","getClosestNode","clientX","clientY","handleMouseMove","useCallback","throttle","handleMouseUp","length","end","prevLines","x","y","threshold","minDist","Infinity","closestNode","sx","sy","dist","Math","sqrt","window","addEventListener","removeEventListener","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx"],"sourcesContent":["import { SECTION } from \"../../App\";\nimport { HomeIcon } from \"../../icons/HomeIcon\";\nimport \"../../styles/vertex.css\";\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\n\nexport type Triangle = {\n  x1: number;\n  x2: number;\n  x3: number;\n  y1: number;\n  y2: number;\n  y3: number;\n  fill: string;\n};\n\ntype VertexProps = {\n  setSection: Dispatch<SetStateAction<SECTION>>;\n  lines: number[][];\n  setLines: Dispatch<SetStateAction<number[][]>>;\n  confirmedTriangles: Triangle[];\n  setConfirmedTriangles: Dispatch<SetStateAction<Triangle[]>>;\n};\n\nconst SCALE = 3;\nconst X_OFFSET = 1100;\nconst Y_OFFSET = 500;\n\nlet spots = [\n  [533, 239],\n  [552, 225],\n  [546, 218],\n  [568, 222],\n  [558, 245],\n  [581, 227],\n  [573, 249],\n  [573, 262],\n  [588, 231],\n  [589, 252],\n  [603, 234],\n  [615, 222],\n  [629, 237],\n  [648, 225],\n  [653, 254],\n  [670, 257],\n  [683, 249],\n  [670, 218],\n  [688, 236],\n  [706, 229],\n  [690, 224],\n  [620, 252],\n  [576, 284],\n  [585, 281],\n  [593, 276],\n  [597, 265],\n  [599, 282],\n  [615, 279],\n  [600, 290],\n  [610, 303],\n  [590, 288],\n  [589, 291],\n  [631, 289],\n  [634, 279],\n  [645, 274],\n  [651, 281],\n  [639, 279],\n  [639, 283],\n  [644, 280],\n  [642, 290],\n  [641, 288],\n  [674, 282],\n  [656, 321],\n  [611, 328],\n  [584, 318],\n  [625, 329],\n  [629, 339],\n  [637, 350],\n  [626, 358],\n  [623, 349],\n  [609, 348],\n  [603, 355],\n  [599, 326],\n  [607, 337],\n  [597, 280],\n  [591, 282],\n  [597, 284],\n];\n\nspots = spots.map((spot) => [\n  spot[0] * SCALE - X_OFFSET,\n  spot[1] * SCALE - Y_OFFSET,\n]);\n\nlet triangles: Triangle[] = [\n  /* EARS */\n  { x1: 533, y1: 239, x2: 552, y2: 225, x3: 546, y3: 218, fill: \"#151110\" },\n  { x1: 568, y1: 222, x2: 552, y2: 225, x3: 546, y3: 218, fill: \"#231E20\" },\n  { x1: 568, y1: 222, x2: 552, y2: 225, x3: 558, y3: 245, fill: \"#151110\" },\n  { x1: 568, y1: 222, x2: 558, y2: 245, x3: 581, y3: 227, fill: \"#231E20\" },\n  { x1: 573, y1: 249, x2: 558, y2: 245, x3: 581, y3: 227, fill: \"#151110\" },\n  { x1: 573, y1: 249, x2: 558, y2: 245, x3: 573, y3: 262, fill: \"#231E20\" },\n  { x1: 573, y1: 249, x2: 588, y2: 231, x3: 581, y3: 227, fill: \"#231E20\" },\n  { x1: 573, y1: 249, x2: 588, y2: 231, x3: 573, y3: 262, fill: \"#151110\" },\n  { x1: 683, y1: 249, x2: 670, y2: 257, x3: 648, y3: 225, fill: \"#231E20\" },\n  { x1: 683, y1: 249, x2: 670, y2: 218, x3: 648, y3: 225, fill: \"#151110\" },\n  { x1: 683, y1: 249, x2: 670, y2: 218, x3: 688, y3: 236, fill: \"#231E20\" },\n  { x1: 690, y1: 224, x2: 688, y2: 213, x3: 670, y3: 218, fill: \"#231E20\" },\n  { x1: 690, y1: 224, x2: 688, y2: 236, x3: 670, y3: 218, fill: \"#151110\" },\n  { x1: 690, y1: 224, x2: 688, y2: 213, x3: 706, y3: 229, fill: \"#151110\" },\n\n  /* BODY */\n  { x1: 589, y1: 252, x2: 588, y2: 231, x3: 573, y3: 262, fill: \"#32302D\" },\n  { x1: 589, y1: 252, x2: 588, y2: 231, x3: 603, y3: 234, fill: \"#6A6462\" },\n  { x1: 615, y1: 222, x2: 588, y2: 231, x3: 603, y3: 234, fill: \"#32302D\" },\n  { x1: 615, y1: 222, x2: 629, y2: 237, x3: 603, y3: 234, fill: \"#6A6462\" },\n  { x1: 615, y1: 222, x2: 629, y2: 237, x3: 648, y3: 225, fill: \"#32302D\" },\n  { x1: 653, y1: 254, x2: 629, y2: 237, x3: 648, y3: 225, fill: \"#6A6462\" },\n  { x1: 653, y1: 254, x2: 670, y2: 257, x3: 648, y3: 225, fill: \"#32302D\" },\n  { x1: 589, y1: 252, x2: 629, y2: 237, x3: 603, y3: 234, fill: \"#32302D\" },\n  { x1: 589, y1: 252, x2: 629, y2: 237, x3: 620, y3: 252, fill: \"#141213\" },\n  { x1: 653, y1: 254, x2: 629, y2: 237, x3: 620, y3: 252, fill: \"#32302D\" },\n  { x1: 576, y1: 284, x2: 589, y2: 252, x3: 573, y3: 262, fill: \"#231E20\" },\n  { x1: 576, y1: 284, x2: 589, y2: 252, x3: 585, y3: 281, fill: \"#6A6462\" },\n  { x1: 593, y1: 276, x2: 589, y2: 252, x3: 585, y3: 281, fill: \"#231E20\" },\n  { x1: 593, y1: 276, x2: 589, y2: 252, x3: 597, y3: 265, fill: \"#141213\" },\n  { x1: 620, y1: 252, x2: 589, y2: 252, x3: 597, y3: 265, fill: \"#32302D\" },\n  { x1: 593, y1: 276, x2: 599, y2: 282, x3: 597, y3: 265, fill: \"#32302D\" },\n  { x1: 620, y1: 252, x2: 599, y2: 282, x3: 597, y3: 265, fill: \"#141213\" },\n  { x1: 620, y1: 252, x2: 599, y2: 282, x3: 615, y3: 279, fill: \"#32302D\" },\n  { x1: 600, y1: 290, x2: 599, y2: 282, x3: 615, y3: 279, fill: \"#141213\" },\n  { x1: 620, y1: 252, x2: 653, y2: 254, x3: 615, y3: 279, fill: \"#141213\" },\n  { x1: 600, y1: 290, x2: 610, y2: 303, x3: 615, y3: 279, fill: \"#32302D\" },\n  { x1: 631, y1: 289, x2: 610, y2: 303, x3: 615, y3: 279, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 634, y2: 279, x3: 615, y3: 279, fill: \"#32302D\" },\n  { x1: 653, y1: 254, x2: 634, y2: 279, x3: 615, y3: 279, fill: \"#6A6462\" },\n  { x1: 653, y1: 254, x2: 634, y2: 279, x3: 645, y3: 274, fill: \"#32302D\" },\n  { x1: 653, y1: 254, x2: 670, y2: 257, x3: 645, y3: 274, fill: \"#141213\" },\n  { x1: 651, y1: 281, x2: 670, y2: 257, x3: 645, y3: 274, fill: \"#32302D\" },\n  { x1: 651, y1: 281, x2: 670, y2: 257, x3: 674, y3: 282, fill: \"#141213\" },\n  { x1: 651, y1: 281, x2: 656, y2: 321, x3: 674, y3: 282, fill: \"#32302D\" },\n  { x1: 651, y1: 281, x2: 656, y2: 321, x3: 642, y3: 290, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 656, y2: 321, x3: 642, y3: 290, fill: \"#32302D\" },\n  { x1: 631, y1: 289, x2: 611, y2: 328, x3: 610, y3: 303, fill: \"#6A6462\" },\n  { x1: 631, y1: 289, x2: 611, y2: 328, x3: 625, y3: 329, fill: \"#141213\" },\n  { x1: 600, y1: 290, x2: 611, y2: 328, x3: 610, y3: 303, fill: \"#141213\" },\n  { x1: 600, y1: 290, x2: 611, y2: 328, x3: 589, y3: 291, fill: \"#32302D\" },\n  { x1: 576, y1: 284, x2: 611, y2: 328, x3: 589, y3: 291, fill: \"#6A6462\" },\n  { x1: 576, y1: 284, x2: 589, y2: 291, x3: 585, y3: 281, fill: \"#32302D\" },\n  { x1: 631, y1: 289, x2: 629, y2: 339, x3: 656, y3: 321, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 625, y2: 329, x3: 629, y3: 339, fill: \"#6A6462\" },\n  { x1: 637, y1: 350, x2: 629, y2: 339, x3: 656, y3: 321, fill: \"#32302D\" },\n  { x1: 637, y1: 350, x2: 629, y2: 339, x3: 626, y3: 358, fill: \"#141213\" },\n  { x1: 623, y1: 349, x2: 629, y2: 339, x3: 626, y3: 358, fill: \"#32302D\" },\n  { x1: 623, y1: 349, x2: 609, y2: 348, x3: 626, y3: 358, fill: \"#141213\" },\n  { x1: 603, y1: 355, x2: 609, y2: 348, x3: 626, y3: 358, fill: \"#32302D\" },\n  { x1: 603, y1: 355, x2: 609, y2: 348, x3: 584, y3: 318, fill: \"#6A6462\" },\n  { x1: 599, y1: 326, x2: 609, y2: 348, x3: 584, y3: 318, fill: \"#141213\" },\n  { x1: 599, y1: 326, x2: 609, y2: 348, x3: 607, y3: 337, fill: \"#32302D\" },\n  { x1: 599, y1: 326, x2: 611, y2: 328, x3: 607, y3: 337, fill: \"#141213\" },\n  { x1: 584, y1: 318, x2: 611, y2: 328, x3: 599, y3: 326, fill: \"#32302D\" },\n  { x1: 584, y1: 318, x2: 611, y2: 328, x3: 576, y3: 284, fill: \"#32302D\" },\n\n  /* EYES */\n  { x1: 590, y1: 288, x2: 589, y2: 291, x3: 585, y3: 281, fill: \"#736B68\" },\n  { x1: 590, y1: 288, x2: 589, y2: 291, x3: 600, y3: 290, fill: \"#736B68\" },\n  { x1: 590, y1: 288, x2: 593, y2: 276, x3: 585, y3: 281, fill: \"#3C2F25\" },\n  { x1: 597, y1: 280, x2: 591, y2: 282, x3: 597, y3: 284, fill: \"#141213\" },\n  { x1: 597, y1: 280, x2: 599, y2: 282, x3: 597, y3: 284, fill: \"#3C2F25\" },\n  { x1: 590, y1: 288, x2: 591, y2: 282, x3: 597, y3: 284, fill: \"#3C2F25\" },\n  { x1: 593, y1: 276, x2: 591, y2: 282, x3: 597, y3: 280, fill: \"#3C2F25\" },\n  { x1: 590, y1: 288, x2: 600, y2: 290, x3: 599, y3: 282, fill: \"#3C2F25\" },\n  { x1: 631, y1: 289, x2: 642, y2: 290, x3: 641, y3: 288, fill: \"#736B68\" },\n  { x1: 651, y1: 281, x2: 642, y2: 290, x3: 641, y3: 288, fill: \"#736B68\" },\n  { x1: 639, y1: 279, x2: 639, y2: 283, x3: 644, y3: 280, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 634, y2: 279, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 631, y1: 289, x2: 641, y2: 288, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 651, y1: 281, x2: 641, y2: 288, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 651, y1: 281, x2: 644, y2: 280, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 645, y1: 274, x2: 639, y2: 279, x3: 634, y3: 279, fill: \"#3C2F25\" },\n  { x1: 645, y1: 274, x2: 639, y2: 279, x3: 644, y3: 280, fill: \"#3C2F25\" },\n  { x1: 645, y1: 274, x2: 651, y2: 281, x3: 644, y3: 280, fill: \"#3C2F25\" },\n  { x1: 639, y1: 279, x2: 639, y2: 283, x3: 634, y3: 279, fill: \"#3C2F25\" },\n\n  /* NOSE */\n  { x1: 607, y1: 337, x2: 625, y2: 329, x3: 611, y3: 328, fill: \"#32302D\" },\n  { x1: 607, y1: 337, x2: 625, y2: 329, x3: 609, y3: 348, fill: \"#130C0A\" },\n  { x1: 623, y1: 349, x2: 625, y2: 329, x3: 609, y3: 348, fill: \"#130C0A\" },\n  { x1: 623, y1: 349, x2: 625, y2: 329, x3: 629, y3: 339, fill: \"#130C0A\" },\n];\n\ntriangles = triangles.map((tri) => {\n  return {\n    x1: tri.x1 * SCALE - X_OFFSET,\n    y1: tri.y1 * SCALE - Y_OFFSET,\n    x2: tri.x2 * SCALE - X_OFFSET,\n    y2: tri.y2 * SCALE - Y_OFFSET,\n    x3: tri.x3 * SCALE - X_OFFSET,\n    y3: tri.y3 * SCALE - Y_OFFSET,\n    fill: tri.fill,\n  };\n});\n\nexport default function Vertex({\n  setSection,\n  lines,\n  setLines,\n  confirmedTriangles,\n  setConfirmedTriangles,\n}: VertexProps) {\n  const [dragging, setDragging] = useState(false);\n  const [startCoords, setStartCoords] = useState([]);\n  const [endCoords, setEndCoords] = useState([]);\n\n  const handleMouseDown = (e) => {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] !== 0 && coords[1] !== 0) {\n      setStartCoords(coords);\n    }\n  };\n\n  const handleMouseMove = useCallback(\n    throttle((e) => {\n      if (dragging) {\n        setEndCoords([e.clientX, e.clientY]);\n      }\n    }, 50), // Throttle to 50ms\n    [dragging]\n  );\n\n  const handleMouseUp = () => {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] !== 0 && end[1] !== 0) {\n        setLines((prevLines) => [...prevLines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  };\n\n  const getClosestNode = (x, y, threshold) => {\n    // Optimize this function for faster calculations.\n    let minDist = Infinity;\n    let closestNode = [0, 0];\n    for (let spot of spots) {\n      const [sx, sy] = spot;\n      const dist = Math.sqrt((x - sx) ** 2 + (y - sy) ** 2);\n      if (dist < threshold && dist < minDist) {\n        minDist = dist;\n        closestNode = [sx, sy];\n      }\n    }\n    return closestNode;\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"mousemove\", handleMouseMove);\n    window.addEventListener(\"mouseup\", handleMouseUp);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleMouseMove);\n      window.removeEventListener(\"mouseup\", handleMouseUp);\n    };\n  }, [handleMouseMove]);\n\n  return (\n    <div className=\"vertex-container\">{/* Render triangles and lines */}</div>\n  );\n}\n"],"mappings":"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AAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EAEzE;AACA;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EAEzE;AACA;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAE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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}