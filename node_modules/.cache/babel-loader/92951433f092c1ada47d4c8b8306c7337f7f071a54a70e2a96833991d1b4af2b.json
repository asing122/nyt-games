{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/components/Strands.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { SECTION } from \"../App\";\nimport { HomeIcon } from \"../icons/HomeIcon\";\nimport \"../styles/strands.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Strands({\n  section,\n  setSection\n}) {\n  _s();\n  const [selectedWord, setSelectedWord] = useState(\"\");\n  const [letterElems, setLetterElems] = useState([]);\n  const initial = [[\"D\", \"I\", \"P\", \"L\", \"O\", \"K\", \"I\", \"T\"], [\"S\", \"U\", \"I\", \"T\", \"S\", \"M\", \"A\", \"M\"], [\"I\", \"N\", \"E\", \"V\", \"N\", \"O\", \"C\", \"S\"], [\"E\", \"N\", \"C\", \"E\", \"G\", \"O\", \"O\", \"D\"], [\"W\", \"A\", \"T\", \"C\", \"H\", \"L\", \"I\", \"P\"], [\"T\", \"L\", \"I\", \"V\", \"E\", \"T\", \"S\", \"L\"], [\"S\", \"L\", \"L\", \"E\", \"S\", \"E\", \"R\", \"A\"], [\"A\", \"A\", \"O\", \"N\", \"G\", \"F\", \"S\", \"C\"], [\"P\", \"T\", \"H\", \"M\", \"Y\", \"A\", \"A\", \"E\"], [\"A\", \"N\", \"A\", \"C\", \"O\", \"F\", \"L\", \"L\"]];\n  const [dragging, setDragging] = useState(false);\n  const [draggedLetters, setDraggedLetters] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [wordCount, setWordCount] = useState(0);\n  useEffect(() => {\n    if (dragging && letterElems.length > 1) {\n      const newLines = letterElems.map((elem, index) => {\n        if (index === 0) return null;\n        const start = letterElems[index - 1].getBoundingClientRect();\n        const end = elem.getBoundingClientRect();\n        return {\n          x1: start.left + start.width / 2,\n          y1: start.top + start.height / 2,\n          x2: end.left + end.width / 2,\n          y2: end.top + end.height / 2\n        };\n      });\n      setLines(newLines.filter(Boolean));\n    }\n  }, [letterElems, dragging]);\n  function handleMouseDown(e) {\n    e.preventDefault();\n    setDragging(true);\n    setSelectedWord(\"\");\n    setLetterElems([e.currentTarget]);\n    setDraggedLetters([e.currentTarget.id]);\n    e.currentTarget.classList.add(\"strands-selected\");\n  }\n  function handleMouseOver(e) {\n    if (dragging) {\n      const newLetter = e.currentTarget.id;\n      if (draggedLetters.includes(newLetter)) {\n        var _letterElems;\n        let newDraggedLetters = draggedLetters;\n        newDraggedLetters.pop();\n        setDraggedLetters(newDraggedLetters);\n        (_letterElems = letterElems[letterElems.length - 1]) === null || _letterElems === void 0 ? void 0 : _letterElems.classList.remove(\"strands-selected\");\n        let newLetterElems = letterElems;\n        newLetterElems.pop();\n        setLetterElems(newLetterElems);\n        setSelectedWord(draggedLetters.map(id => {\n          var _document$getElementB;\n          return (_document$getElementB = document.getElementById(id)) === null || _document$getElementB === void 0 ? void 0 : _document$getElementB.innerText;\n        }).join(\"\"));\n        let newLines = lines;\n        newLines.pop();\n        setLines(newLines);\n      } else {\n        const newDraggedLetters = [...draggedLetters, newLetter];\n        setLetterElems([...letterElems, e.currentTarget]);\n        setDraggedLetters(newDraggedLetters);\n        e.currentTarget.classList.add(\"strands-selected\");\n        setSelectedWord(draggedLetters.map(id => {\n          var _document$getElementB2;\n          return (_document$getElementB2 = document.getElementById(id)) === null || _document$getElementB2 === void 0 ? void 0 : _document$getElementB2.innerText;\n        }).join(\"\") + e.currentTarget.innerText);\n      }\n    } else {\n      letterElems.forEach(e => e.classList.remove(\"strands-selected\"));\n    }\n  }\n  function handleMouseUp() {\n    setDragging(false);\n    setSelectedWord(draggedLetters.map(id => {\n      var _document$getElementB3;\n      return (_document$getElementB3 = document.getElementById(id)) === null || _document$getElementB3 === void 0 ? void 0 : _document$getElementB3.innerText;\n    }).join(\"\"));\n    checkWord();\n    letterElems.forEach(e => e.classList.remove(\"strands-selected\"));\n    setDraggedLetters([]);\n    setLetterElems([]);\n    setSelectedWord(\"\");\n  }\n  const correct = [\"DIPLOMAT\", \"SUITS\", \"KIMSCONVENIENCE\", \"GOODPLACE\", \"PASTLIVES\", \"CHALLENGERS\", \"ANATOMYOFAFALL\"];\n  const pangram = \"WATCHLIST\";\n  function checkWord() {\n    const chosenWord = draggedLetters.map(id => {\n      var _document$getElementB4;\n      return (_document$getElementB4 = document.getElementById(id)) === null || _document$getElementB4 === void 0 ? void 0 : _document$getElementB4.innerText;\n    }).join(\"\");\n    if (correct.filter(word => word == chosenWord).length == 1) {\n      letterElems.forEach(e => document.getElementById(e.id).style.backgroundColor = \"#aedfee\");\n      setFinalLines([...finalLines, ...lines]);\n      setWordCount(wordCount + 1);\n    } else if (chosenWord == pangram) {\n      letterElems.forEach(e => document.getElementById(e.id).style.backgroundColor = \"#f8cb2c\");\n      setPangramLines(lines);\n      setWordCount(wordCount + 1);\n    }\n    setLines([]);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      onClick: () => setSection(SECTION.NONE),\n      children: HomeIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"strands\",\n      style: {\n        height: window.innerHeight\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"riddle\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theme\",\n            children: \"Today's theme\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"theme-text\",\n            children: \"Kenny's birthday!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), wordCount == 8 && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"submit\",\n          style: {\n            minWidth: \"10em\",\n            color: \"rgb(0, 0, 0)\"\n          },\n          children: \"View results\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"strands-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          readOnly: true,\n          value: selectedWord\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"strands-svg\",\n          children: [finalLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: line.x1,\n            y1: line.y1,\n            x2: line.x2,\n            y2: line.y2,\n            stroke: \"#aedfee\",\n            strokeWidth: \"8\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 15\n          }, this)), pangramLines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: line.x1,\n            y1: line.y1,\n            x2: line.x2,\n            y2: line.y2,\n            stroke: \"#f8cb2c\",\n            strokeWidth: \"8\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)), lines.map((line, index) => /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: line.x1,\n            y1: line.y1,\n            x2: line.x2,\n            y2: line.y2,\n            stroke: \"rgb(219, 216, 197)\",\n            strokeWidth: \"8\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strands-board\",\n          onMouseLeave: () => setDragging(false),\n          children: initial.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strands-row\",\n            children: row.map((letter, colIndex) => {\n              const id = `${letter}-${rowIndex}-${colIndex}`;\n              return /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"letter\",\n                id: id,\n                onMouseDown: handleMouseDown,\n                onMouseOver: handleMouseOver,\n                onMouseUp: handleMouseUp,\n                children: letter\n              }, id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 21\n              }, this);\n            })\n          }, rowIndex, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"footer\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Strands, \"kxKj/PmHm3UBHatV9q1m/kflUrc=\");\n_c = Strands;\nvar _c;\n$RefreshReg$(_c, \"Strands\");","map":{"version":3,"names":["useEffect","useState","SECTION","HomeIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","Strands","section","setSection","_s","selectedWord","setSelectedWord","letterElems","setLetterElems","initial","dragging","setDragging","draggedLetters","setDraggedLetters","lines","setLines","wordCount","setWordCount","length","newLines","map","elem","index","start","getBoundingClientRect","end","x1","left","width","y1","top","height","x2","y2","filter","Boolean","handleMouseDown","e","preventDefault","currentTarget","id","classList","add","handleMouseOver","newLetter","includes","_letterElems","newDraggedLetters","pop","remove","newLetterElems","_document$getElementB","document","getElementById","innerText","join","_document$getElementB2","forEach","handleMouseUp","_document$getElementB3","checkWord","correct","pangram","chosenWord","_document$getElementB4","word","style","backgroundColor","setFinalLines","finalLines","setPangramLines","children","className","onClick","NONE","fileName","_jsxFileName","lineNumber","columnNumber","window","innerHeight","minWidth","color","readOnly","value","line","stroke","strokeWidth","pangramLines","onMouseLeave","row","rowIndex","letter","colIndex","onMouseDown","onMouseOver","onMouseUp","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/components/Strands.tsx"],"sourcesContent":["import { Dispatch, SetStateAction, useEffect, useRef, useState } from \"react\";\nimport { MenuProps, SECTION } from \"../App\";\nimport { HomeIcon } from \"../icons/HomeIcon\";\nimport \"../styles/strands.css\";\n\ntype StrandsProps = {\n  section: SECTION;\n  setSection: Dispatch<SetStateAction<SECTION>>;\n  finalLines: any[];\n  setFinalLines: Dispatch<SetStateAction<any[]>>;\n  pangramLines: any[];\n  setPangramLines: Dispatch<SetStateAction<any[]>>;\n};\n\nexport default function Strands({ section, setSection }: MenuProps) {\n  const [selectedWord, setSelectedWord] = useState<string>(\"\");\n  const [letterElems, setLetterElems] = useState<any[]>([]);\n  const initial = [\n    [\"D\", \"I\", \"P\", \"L\", \"O\", \"K\", \"I\", \"T\"],\n    [\"S\", \"U\", \"I\", \"T\", \"S\", \"M\", \"A\", \"M\"],\n    [\"I\", \"N\", \"E\", \"V\", \"N\", \"O\", \"C\", \"S\"],\n    [\"E\", \"N\", \"C\", \"E\", \"G\", \"O\", \"O\", \"D\"],\n    [\"W\", \"A\", \"T\", \"C\", \"H\", \"L\", \"I\", \"P\"],\n    [\"T\", \"L\", \"I\", \"V\", \"E\", \"T\", \"S\", \"L\"],\n    [\"S\", \"L\", \"L\", \"E\", \"S\", \"E\", \"R\", \"A\"],\n    [\"A\", \"A\", \"O\", \"N\", \"G\", \"F\", \"S\", \"C\"],\n    [\"P\", \"T\", \"H\", \"M\", \"Y\", \"A\", \"A\", \"E\"],\n    [\"A\", \"N\", \"A\", \"C\", \"O\", \"F\", \"L\", \"L\"],\n  ];\n\n  const [dragging, setDragging] = useState<boolean>(false);\n  const [draggedLetters, setDraggedLetters] = useState<string[]>([]);\n\n  const [lines, setLines] = useState<any[]>([]);\n  const [wordCount, setWordCount] = useState<number>(0);\n\n  useEffect(() => {\n    if (dragging && letterElems.length > 1) {\n      const newLines = letterElems.map((elem, index) => {\n        if (index === 0) return null;\n        const start = letterElems[index - 1].getBoundingClientRect();\n        const end = elem.getBoundingClientRect();\n        return {\n          x1: start.left + start.width / 2,\n          y1: start.top + start.height / 2,\n          x2: end.left + end.width / 2,\n          y2: end.top + end.height / 2,\n        };\n      });\n      setLines(newLines.filter(Boolean));\n    }\n  }, [letterElems, dragging]);\n\n  function handleMouseDown(\n    e: React.MouseEvent<HTMLParagraphElement, MouseEvent>\n  ) {\n    e.preventDefault();\n    setDragging(true);\n    setSelectedWord(\"\");\n    setLetterElems([e.currentTarget]);\n    setDraggedLetters([e.currentTarget.id]);\n    e.currentTarget.classList.add(\"strands-selected\");\n  }\n\n  function handleMouseOver(\n    e: React.MouseEvent<HTMLParagraphElement, MouseEvent>\n  ) {\n    if (dragging) {\n      const newLetter = e.currentTarget.id;\n      if (draggedLetters.includes(newLetter)) {\n        let newDraggedLetters = draggedLetters;\n        newDraggedLetters.pop();\n        setDraggedLetters(newDraggedLetters);\n        letterElems[letterElems.length - 1]?.classList.remove(\n          \"strands-selected\"\n        );\n        let newLetterElems = letterElems;\n        newLetterElems.pop();\n        setLetterElems(newLetterElems);\n        setSelectedWord(\n          draggedLetters\n            .map((id) => document.getElementById(id)?.innerText)\n            .join(\"\")\n        );\n        let newLines = lines;\n        newLines.pop();\n        setLines(newLines);\n      } else {\n        const newDraggedLetters = [...draggedLetters, newLetter];\n        setLetterElems([...letterElems, e.currentTarget]);\n        setDraggedLetters(newDraggedLetters);\n        e.currentTarget.classList.add(\"strands-selected\");\n        setSelectedWord(\n          draggedLetters\n            .map((id) => document.getElementById(id)?.innerText)\n            .join(\"\") + e.currentTarget.innerText\n        );\n      }\n    } else {\n      letterElems.forEach((e) => e.classList.remove(\"strands-selected\"));\n    }\n  }\n\n  function handleMouseUp() {\n    setDragging(false);\n    setSelectedWord(\n      draggedLetters\n        .map((id) => document.getElementById(id)?.innerText)\n        .join(\"\")\n    );\n\n    checkWord();\n    letterElems.forEach((e) => e.classList.remove(\"strands-selected\"));\n    setDraggedLetters([]);\n    setLetterElems([]);\n    setSelectedWord(\"\");\n  }\n\n  const correct = [\n    \"DIPLOMAT\",\n    \"SUITS\",\n    \"KIMSCONVENIENCE\",\n    \"GOODPLACE\",\n    \"PASTLIVES\",\n    \"CHALLENGERS\",\n    \"ANATOMYOFAFALL\",\n  ];\n\n  const pangram = \"WATCHLIST\";\n\n  function checkWord() {\n    const chosenWord = draggedLetters\n      .map((id) => document.getElementById(id)?.innerText)\n      .join(\"\");\n    if (correct.filter((word) => word == chosenWord).length == 1) {\n      letterElems.forEach(\n        (e) =>\n          (document.getElementById(e.id)!.style.backgroundColor = \"#aedfee\")\n      );\n      setFinalLines([...finalLines, ...lines]);\n      setWordCount(wordCount + 1);\n    } else if (chosenWord == pangram) {\n      letterElems.forEach(\n        (e) =>\n          (document.getElementById(e.id)!.style.backgroundColor = \"#f8cb2c\")\n      );\n      setPangramLines(lines);\n      setWordCount(wordCount + 1);\n    }\n    setLines([]);\n  }\n\n  return (\n    <>\n      <div className=\"home\" onClick={() => setSection(SECTION.NONE)}>\n        {HomeIcon}\n      </div>\n      <div className=\"strands\" style={{ height: window.innerHeight }}>\n        <div className=\"left\">\n          <div className=\"riddle\">\n            <div className=\"theme\">Today's theme</div>\n            <div className=\"theme-text\">Kenny's birthday!</div>\n          </div>\n          {wordCount == 8 && (\n            <button\n              className=\"submit\"\n              style={{ minWidth: \"10em\", color: \"rgb(0, 0, 0)\" }}\n            >\n              View results\n            </button>\n          )}\n        </div>\n        <div className=\"strands-body\">\n          <input readOnly value={selectedWord} />\n          <svg className=\"strands-svg\">\n            {finalLines.map((line, index) => (\n              <line\n                key={index}\n                x1={line.x1}\n                y1={line.y1}\n                x2={line.x2}\n                y2={line.y2}\n                stroke=\"#aedfee\"\n                strokeWidth=\"8\"\n              />\n            ))}\n            {pangramLines.map((line, index) => (\n              <line\n                key={index}\n                x1={line.x1}\n                y1={line.y1}\n                x2={line.x2}\n                y2={line.y2}\n                stroke=\"#f8cb2c\"\n                strokeWidth=\"8\"\n              />\n            ))}\n            {lines.map((line, index) => (\n              <line\n                key={index}\n                x1={line.x1}\n                y1={line.y1}\n                x2={line.x2}\n                y2={line.y2}\n                stroke=\"rgb(219, 216, 197)\"\n                strokeWidth=\"8\"\n              />\n            ))}\n          </svg>\n          <div\n            className=\"strands-board\"\n            onMouseLeave={() => setDragging(false)}\n          >\n            {initial.map((row, rowIndex) => (\n              <div className=\"strands-row\" key={rowIndex}>\n                {row.map((letter, colIndex) => {\n                  const id = `${letter}-${rowIndex}-${colIndex}`;\n                  return (\n                    <p\n                      className=\"letter\"\n                      id={id}\n                      key={id}\n                      onMouseDown={handleMouseDown}\n                      onMouseOver={handleMouseOver}\n                      onMouseUp={handleMouseUp}\n                    >\n                      {letter}\n                    </p>\n                  );\n                })}\n              </div>\n            ))}\n          </div>\n          <div className=\"footer\"></div>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}