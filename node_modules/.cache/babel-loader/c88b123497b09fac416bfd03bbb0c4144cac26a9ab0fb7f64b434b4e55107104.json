{"ast":null,"code":"var _jsxFileName = \"/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx\",\n  _s = $RefreshSig$();\nimport { SECTION } from \"../../App\";\nimport { HomeIcon } from \"../../icons/HomeIcon\";\nimport \"../../styles/vertex.css\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SCALE = 3;\nconst X_OFFSET = 1100;\nconst Y_OFFSET = 500;\nlet spots = [[533, 239], [552, 225], [546, 218], [568, 222], [558, 245], [581, 227], [573, 249], [573, 262], [588, 231], [589, 252], [603, 234], [615, 222], [629, 237], [648, 225], [653, 254], [670, 257], [683, 249], [670, 218], [688, 236], [706, 229], [690, 224], [620, 252], [576, 284], [585, 281], [593, 276], [597, 265], [599, 282], [615, 279], [600, 290], [610, 303], [590, 288], [589, 291], [631, 289], [634, 279], [645, 274], [651, 281], [639, 279], [639, 283], [644, 280], [642, 290], [641, 288], [674, 282], [656, 321], [611, 328], [584, 318], [625, 329], [629, 339], [637, 350], [626, 358], [623, 349], [609, 348], [603, 355], [599, 326], [607, 337], [597, 280], [591, 282], [597, 284]];\nspots = spots.map(spot => [spot[0] * SCALE - X_OFFSET, spot[1] * SCALE - Y_OFFSET]);\nlet triangles = [/* EARS */\n{\n  x1: 533,\n  y1: 239,\n  x2: 552,\n  y2: 225,\n  x3: 546,\n  y3: 218,\n  fill: \"#151110\"\n}, {\n  x1: 568,\n  y1: 222,\n  x2: 552,\n  y2: 225,\n  x3: 546,\n  y3: 218,\n  fill: \"#231E20\"\n}, {\n  x1: 568,\n  y1: 222,\n  x2: 552,\n  y2: 225,\n  x3: 558,\n  y3: 245,\n  fill: \"#151110\"\n}, {\n  x1: 568,\n  y1: 222,\n  x2: 558,\n  y2: 245,\n  x3: 581,\n  y3: 227,\n  fill: \"#231E20\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 558,\n  y2: 245,\n  x3: 581,\n  y3: 227,\n  fill: \"#151110\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 558,\n  y2: 245,\n  x3: 573,\n  y3: 262,\n  fill: \"#231E20\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 588,\n  y2: 231,\n  x3: 581,\n  y3: 227,\n  fill: \"#231E20\"\n}, {\n  x1: 573,\n  y1: 249,\n  x2: 588,\n  y2: 231,\n  x3: 573,\n  y3: 262,\n  fill: \"#151110\"\n}, {\n  x1: 683,\n  y1: 249,\n  x2: 670,\n  y2: 257,\n  x3: 648,\n  y3: 225,\n  fill: \"#231E20\"\n}, {\n  x1: 683,\n  y1: 249,\n  x2: 670,\n  y2: 218,\n  x3: 648,\n  y3: 225,\n  fill: \"#151110\"\n}, {\n  x1: 683,\n  y1: 249,\n  x2: 670,\n  y2: 218,\n  x3: 688,\n  y3: 236,\n  fill: \"#231E20\"\n}, {\n  x1: 690,\n  y1: 224,\n  x2: 688,\n  y2: 213,\n  x3: 670,\n  y3: 218,\n  fill: \"#231E20\"\n}, {\n  x1: 690,\n  y1: 224,\n  x2: 688,\n  y2: 236,\n  x3: 670,\n  y3: 218,\n  fill: \"#151110\"\n}, {\n  x1: 690,\n  y1: 224,\n  x2: 688,\n  y2: 213,\n  x3: 706,\n  y3: 229,\n  fill: \"#151110\"\n}, /* BODY */\n{\n  x1: 589,\n  y1: 252,\n  x2: 588,\n  y2: 231,\n  x3: 573,\n  y3: 262,\n  fill: \"#32302D\"\n}, {\n  x1: 589,\n  y1: 252,\n  x2: 588,\n  y2: 231,\n  x3: 603,\n  y3: 234,\n  fill: \"#6A6462\"\n}, {\n  x1: 615,\n  y1: 222,\n  x2: 588,\n  y2: 231,\n  x3: 603,\n  y3: 234,\n  fill: \"#32302D\"\n}, {\n  x1: 615,\n  y1: 222,\n  x2: 629,\n  y2: 237,\n  x3: 603,\n  y3: 234,\n  fill: \"#6A6462\"\n}, {\n  x1: 615,\n  y1: 222,\n  x2: 629,\n  y2: 237,\n  x3: 648,\n  y3: 225,\n  fill: \"#32302D\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 629,\n  y2: 237,\n  x3: 648,\n  y3: 225,\n  fill: \"#6A6462\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 670,\n  y2: 257,\n  x3: 648,\n  y3: 225,\n  fill: \"#32302D\"\n}, {\n  x1: 589,\n  y1: 252,\n  x2: 629,\n  y2: 237,\n  x3: 603,\n  y3: 234,\n  fill: \"#32302D\"\n}, {\n  x1: 589,\n  y1: 252,\n  x2: 629,\n  y2: 237,\n  x3: 620,\n  y3: 252,\n  fill: \"#141213\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 629,\n  y2: 237,\n  x3: 620,\n  y3: 252,\n  fill: \"#32302D\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 589,\n  y2: 252,\n  x3: 573,\n  y3: 262,\n  fill: \"#231E20\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 589,\n  y2: 252,\n  x3: 585,\n  y3: 281,\n  fill: \"#6A6462\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 589,\n  y2: 252,\n  x3: 585,\n  y3: 281,\n  fill: \"#231E20\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 589,\n  y2: 252,\n  x3: 597,\n  y3: 265,\n  fill: \"#141213\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 589,\n  y2: 252,\n  x3: 597,\n  y3: 265,\n  fill: \"#32302D\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 599,\n  y2: 282,\n  x3: 597,\n  y3: 265,\n  fill: \"#32302D\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 599,\n  y2: 282,\n  x3: 597,\n  y3: 265,\n  fill: \"#141213\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 599,\n  y2: 282,\n  x3: 615,\n  y3: 279,\n  fill: \"#32302D\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 599,\n  y2: 282,\n  x3: 615,\n  y3: 279,\n  fill: \"#141213\"\n}, {\n  x1: 620,\n  y1: 252,\n  x2: 653,\n  y2: 254,\n  x3: 615,\n  y3: 279,\n  fill: \"#141213\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 610,\n  y2: 303,\n  x3: 615,\n  y3: 279,\n  fill: \"#32302D\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 610,\n  y2: 303,\n  x3: 615,\n  y3: 279,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 634,\n  y2: 279,\n  x3: 615,\n  y3: 279,\n  fill: \"#32302D\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 634,\n  y2: 279,\n  x3: 615,\n  y3: 279,\n  fill: \"#6A6462\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 634,\n  y2: 279,\n  x3: 645,\n  y3: 274,\n  fill: \"#32302D\"\n}, {\n  x1: 653,\n  y1: 254,\n  x2: 670,\n  y2: 257,\n  x3: 645,\n  y3: 274,\n  fill: \"#141213\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 670,\n  y2: 257,\n  x3: 645,\n  y3: 274,\n  fill: \"#32302D\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 670,\n  y2: 257,\n  x3: 674,\n  y3: 282,\n  fill: \"#141213\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 656,\n  y2: 321,\n  x3: 674,\n  y3: 282,\n  fill: \"#32302D\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 656,\n  y2: 321,\n  x3: 642,\n  y3: 290,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 656,\n  y2: 321,\n  x3: 642,\n  y3: 290,\n  fill: \"#32302D\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 611,\n  y2: 328,\n  x3: 610,\n  y3: 303,\n  fill: \"#6A6462\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 611,\n  y2: 328,\n  x3: 625,\n  y3: 329,\n  fill: \"#141213\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 611,\n  y2: 328,\n  x3: 610,\n  y3: 303,\n  fill: \"#141213\"\n}, {\n  x1: 600,\n  y1: 290,\n  x2: 611,\n  y2: 328,\n  x3: 589,\n  y3: 291,\n  fill: \"#32302D\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 611,\n  y2: 328,\n  x3: 589,\n  y3: 291,\n  fill: \"#6A6462\"\n}, {\n  x1: 576,\n  y1: 284,\n  x2: 589,\n  y2: 291,\n  x3: 585,\n  y3: 281,\n  fill: \"#32302D\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 629,\n  y2: 339,\n  x3: 656,\n  y3: 321,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 625,\n  y2: 329,\n  x3: 629,\n  y3: 339,\n  fill: \"#6A6462\"\n}, {\n  x1: 637,\n  y1: 350,\n  x2: 629,\n  y2: 339,\n  x3: 656,\n  y3: 321,\n  fill: \"#32302D\"\n}, {\n  x1: 637,\n  y1: 350,\n  x2: 629,\n  y2: 339,\n  x3: 626,\n  y3: 358,\n  fill: \"#141213\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 629,\n  y2: 339,\n  x3: 626,\n  y3: 358,\n  fill: \"#32302D\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 609,\n  y2: 348,\n  x3: 626,\n  y3: 358,\n  fill: \"#141213\"\n}, {\n  x1: 603,\n  y1: 355,\n  x2: 609,\n  y2: 348,\n  x3: 626,\n  y3: 358,\n  fill: \"#32302D\"\n}, {\n  x1: 603,\n  y1: 355,\n  x2: 609,\n  y2: 348,\n  x3: 584,\n  y3: 318,\n  fill: \"#6A6462\"\n}, {\n  x1: 599,\n  y1: 326,\n  x2: 609,\n  y2: 348,\n  x3: 584,\n  y3: 318,\n  fill: \"#141213\"\n}, {\n  x1: 599,\n  y1: 326,\n  x2: 609,\n  y2: 348,\n  x3: 607,\n  y3: 337,\n  fill: \"#32302D\"\n}, {\n  x1: 599,\n  y1: 326,\n  x2: 611,\n  y2: 328,\n  x3: 607,\n  y3: 337,\n  fill: \"#141213\"\n}, {\n  x1: 584,\n  y1: 318,\n  x2: 611,\n  y2: 328,\n  x3: 599,\n  y3: 326,\n  fill: \"#32302D\"\n}, {\n  x1: 584,\n  y1: 318,\n  x2: 611,\n  y2: 328,\n  x3: 576,\n  y3: 284,\n  fill: \"#32302D\"\n}, /* EYES */\n{\n  x1: 590,\n  y1: 288,\n  x2: 589,\n  y2: 291,\n  x3: 585,\n  y3: 281,\n  fill: \"#736B68\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 589,\n  y2: 291,\n  x3: 600,\n  y3: 290,\n  fill: \"#736B68\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 593,\n  y2: 276,\n  x3: 585,\n  y3: 281,\n  fill: \"#3C2F25\"\n}, {\n  x1: 597,\n  y1: 280,\n  x2: 591,\n  y2: 282,\n  x3: 597,\n  y3: 284,\n  fill: \"#141213\"\n}, {\n  x1: 597,\n  y1: 280,\n  x2: 599,\n  y2: 282,\n  x3: 597,\n  y3: 284,\n  fill: \"#3C2F25\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 591,\n  y2: 282,\n  x3: 597,\n  y3: 284,\n  fill: \"#3C2F25\"\n}, {\n  x1: 593,\n  y1: 276,\n  x2: 591,\n  y2: 282,\n  x3: 597,\n  y3: 280,\n  fill: \"#3C2F25\"\n}, {\n  x1: 590,\n  y1: 288,\n  x2: 600,\n  y2: 290,\n  x3: 599,\n  y3: 282,\n  fill: \"#3C2F25\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 642,\n  y2: 290,\n  x3: 641,\n  y3: 288,\n  fill: \"#736B68\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 642,\n  y2: 290,\n  x3: 641,\n  y3: 288,\n  fill: \"#736B68\"\n}, {\n  x1: 639,\n  y1: 279,\n  x2: 639,\n  y2: 283,\n  x3: 644,\n  y3: 280,\n  fill: \"#141213\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 634,\n  y2: 279,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 631,\n  y1: 289,\n  x2: 641,\n  y2: 288,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 641,\n  y2: 288,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 651,\n  y1: 281,\n  x2: 644,\n  y2: 280,\n  x3: 639,\n  y3: 283,\n  fill: \"#3C2F25\"\n}, {\n  x1: 645,\n  y1: 274,\n  x2: 639,\n  y2: 279,\n  x3: 634,\n  y3: 279,\n  fill: \"#3C2F25\"\n}, {\n  x1: 645,\n  y1: 274,\n  x2: 639,\n  y2: 279,\n  x3: 644,\n  y3: 280,\n  fill: \"#3C2F25\"\n}, {\n  x1: 645,\n  y1: 274,\n  x2: 651,\n  y2: 281,\n  x3: 644,\n  y3: 280,\n  fill: \"#3C2F25\"\n}, {\n  x1: 639,\n  y1: 279,\n  x2: 639,\n  y2: 283,\n  x3: 634,\n  y3: 279,\n  fill: \"#3C2F25\"\n}, /* NOSE */\n{\n  x1: 607,\n  y1: 337,\n  x2: 625,\n  y2: 329,\n  x3: 611,\n  y3: 328,\n  fill: \"#32302D\"\n}, {\n  x1: 607,\n  y1: 337,\n  x2: 625,\n  y2: 329,\n  x3: 609,\n  y3: 348,\n  fill: \"#130C0A\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 625,\n  y2: 329,\n  x3: 609,\n  y3: 348,\n  fill: \"#130C0A\"\n}, {\n  x1: 623,\n  y1: 349,\n  x2: 625,\n  y2: 329,\n  x3: 629,\n  y3: 339,\n  fill: \"#130C0A\"\n}];\ntriangles = triangles.map(tri => {\n  return {\n    x1: tri.x1 * SCALE - X_OFFSET,\n    y1: tri.y1 * SCALE - Y_OFFSET,\n    x2: tri.x2 * SCALE - X_OFFSET,\n    y2: tri.y2 * SCALE - Y_OFFSET,\n    x3: tri.x3 * SCALE - X_OFFSET,\n    y3: tri.y3 * SCALE - Y_OFFSET,\n    fill: tri.fill\n  };\n});\nexport default function Vertex({\n  setSection\n}) {\n  _s();\n  const [dragging, setDragging] = useState(false);\n  const [startCoords, setStartCoords] = useState([]);\n  const [endCoords, setEndCoords] = useState([]);\n  const [lines, setLines] = useState([]);\n  const [confirmedTriangle, setConfirmedTriangle] = useState([]);\n  function handleMouseDown(e) {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] != 0 && coords[1] != 0) {\n      setStartCoords(coords);\n    }\n  }\n  function handleMouseMove(e) {\n    if (dragging) {\n      const coords = [e.clientX, e.clientY];\n      setEndCoords(coords);\n    }\n  }\n  function handleMouseUp() {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] != 0 && end[1] != 0) {\n        setLines([...lines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  }\n  function getClosestNode(x, y, threshold) {\n    let minDistX = threshold;\n    let minDistY = threshold;\n    let minX = 0,\n      minY = 0;\n    spots.filter(coord => x - coord[0] < threshold && y - coord[1] < threshold).map(coord => {\n      if (Math.abs(x - coord[0]) < minDistX && Math.abs(y - coord[1]) < minDistY && numberOfCircles(coord) > 0) {\n        minDistX = Math.abs(x - coord[0]);\n        minDistY = Math.abs(y - coord[1]);\n        minX = coord[0];\n        minY = coord[1];\n      }\n    });\n    return [minX, minY];\n  }\n  function allLines(triangle) {\n    const returnVal = findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2).length > 0 && findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3).length > 0 && findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3).length > 0;\n    if (returnVal && !confirmedTriangle.includes(triangle)) {\n      setConfirmedTriangle([...confirmedTriangle, triangle]);\n      const firstSpot = numberOfCircles([triangle.x1, triangle.y1]) == 0;\n      const secondSpot = numberOfCircles([triangle.x2, triangle.y2]) == 0;\n      const thirdSpot = numberOfCircles([triangle.x3, triangle.y3]) == 0;\n      const condition = line => (!firstSpot || !secondSpot || !equalLines(line, findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2)[0])) && (!secondSpot || !thirdSpot || !equalLines(line, findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3)[0])) && (!firstSpot || !thirdSpot || !equalLines(line, findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3)[0]));\n      setLines(lines.filter(line => condition(line)));\n    }\n    return returnVal;\n  }\n  function equalLines(line1, line2) {\n    return line1[0] == line2[0] && line1[1] == line2[1] && line1[2] == line2[2] && line1[3] == line2[3];\n  }\n  function findLine(x1, y1, x2, y2) {\n    return lines.filter(coords => coords[0] == x1 && coords[1] == y1 && coords[2] == x2 && coords[3] == y2 || coords[0] == x2 && coords[1] == y2 && coords[2] == x1 && coords[3] == y1);\n  }\n  function undoLastLine() {\n    let lastLines = lines;\n    lastLines.pop();\n    setLines(lastLines);\n  }\n  function numberOfCircles(spot) {\n    return triangles.filter(triangle => !confirmedTriangle.includes(triangle) && (triangle.x1 == spot[0] && triangle.y1 == spot[1] || triangle.x2 == spot[0] && triangle.y2 == spot[1] || triangle.x3 == spot[0] && triangle.y3 == spot[1])).length;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      onClick: () => setSection(SECTION.NONE),\n      children: HomeIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"vertex-board\",\n      style: {\n        width: \"100%\",\n        height: window.innerHeight\n      },\n      onMouseDown: handleMouseDown,\n      onMouseMove: handleMouseMove,\n      onMouseUp: handleMouseUp,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spots\",\n        children: [triangles.map(triangle => confirmedTriangle.includes(triangle) && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"strands-svg\",\n          children: /*#__PURE__*/_jsxDEV(\"polygon\", {\n            points: triangle.x1.toString() + \",\" + triangle.y1.toString() + \" \" + triangle.x2.toString() + \",\" + triangle.y2.toString() + \" \" + triangle.x3.toString() + \",\" + triangle.y3.toString(),\n            style: {\n              fill: triangle.fill,\n              stroke: \"black\",\n              strokeWidth: \"0\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 21\n          }, this)\n        }, triangle.toString(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 17\n        }, this)), spots.map(spot => numberOfCircles(spot) > 0 && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"vertex-svg\",\n          style: {\n            zIndex: 5\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n            r: numberOfCircles(spot) + 5,\n            cx: spot[0],\n            cy: spot[1],\n            fill: \"white\",\n            stroke: \"black\",\n            strokeWidth: \"0.5\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n            x: spot[0],\n            y: spot[1],\n            textAnchor: \"middle\",\n            alignmentBaseline: \"middle\",\n            fontSize: numberOfCircles(spot) + 3,\n            fill: \"black\",\n            children: numberOfCircles(spot)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 19\n          }, this)]\n        }, spot.toString() + Math.random() * 100, true, {\n          fileName: _jsxFileName,\n          lineNumber: 376,\n          columnNumber: 17\n        }, this)), startCoords.length == 2 && endCoords.length == 2 && /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"vertex-lines\",\n          style: {\n            zIndex: -5\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: startCoords[0],\n            y1: startCoords[1],\n            x2: endCoords[0],\n            y2: endCoords[1],\n            stroke: \"black\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 15\n          }, this)\n        }, startCoords.toString() + endCoords.toString() + Math.random() * 100, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), lines.map(line => /*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"vertex-lines\",\n          style: {\n            zIndex: -5\n          },\n          children: /*#__PURE__*/_jsxDEV(\"line\", {\n            x1: line[0],\n            y1: line[1],\n            x2: line[2],\n            y2: line[3],\n            stroke: \"black\",\n            strokeWidth: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this)\n        }, startCoords.toString() + endCoords.toString() + Math.random() * 100, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: undoLastLine,\n          style: {\n            position: \"fixed\",\n            bottom: 10\n          },\n          children: \"Undo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Vertex, \"65VxJn4ZZXkZpJQVw9N/a6ZdPPQ=\");\n_c = Vertex;\nvar _c;\n$RefreshReg$(_c, \"Vertex\");","map":{"version":3,"names":["SECTION","HomeIcon","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","SCALE","X_OFFSET","Y_OFFSET","spots","map","spot","triangles","x1","y1","x2","y2","x3","y3","fill","tri","Vertex","setSection","_s","dragging","setDragging","startCoords","setStartCoords","endCoords","setEndCoords","lines","setLines","confirmedTriangle","setConfirmedTriangle","handleMouseDown","e","preventDefault","coords","getClosestNode","clientX","clientY","handleMouseMove","handleMouseUp","length","end","x","y","threshold","minDistX","minDistY","minX","minY","filter","coord","Math","abs","numberOfCircles","allLines","triangle","returnVal","findLine","includes","firstSpot","secondSpot","thirdSpot","condition","line","equalLines","line1","line2","undoLastLine","lastLines","pop","children","className","onClick","NONE","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","window","innerHeight","onMouseDown","onMouseMove","onMouseUp","points","toString","stroke","strokeWidth","zIndex","r","cx","cy","textAnchor","alignmentBaseline","fontSize","random","position","bottom","_c","$RefreshReg$"],"sources":["/Users/annikasingh/Desktop/hi/connections/src/components/vertex/Vertex.tsx"],"sourcesContent":["import { SECTION } from \"../../App\";\nimport { HomeIcon } from \"../../icons/HomeIcon\";\nimport \"../../styles/vertex.css\";\nimport { Dispatch, SetStateAction, useEffect, useState } from \"react\";\n\ntype Triangle = {\n  x1: number;\n  x2: number;\n  x3: number;\n  y1: number;\n  y2: number;\n  y3: number;\n  fill: string;\n};\n\ntype VertexProps = {\n  setSection: Dispatch<SetStateAction<SECTION>>;\n};\n\nconst SCALE = 3;\nconst X_OFFSET = 1100;\nconst Y_OFFSET = 500;\n\nlet spots = [\n  [533, 239],\n  [552, 225],\n  [546, 218],\n  [568, 222],\n  [558, 245],\n  [581, 227],\n  [573, 249],\n  [573, 262],\n  [588, 231],\n  [589, 252],\n  [603, 234],\n  [615, 222],\n  [629, 237],\n  [648, 225],\n  [653, 254],\n  [670, 257],\n  [683, 249],\n  [670, 218],\n  [688, 236],\n  [706, 229],\n  [690, 224],\n  [620, 252],\n  [576, 284],\n  [585, 281],\n  [593, 276],\n  [597, 265],\n  [599, 282],\n  [615, 279],\n  [600, 290],\n  [610, 303],\n  [590, 288],\n  [589, 291],\n  [631, 289],\n  [634, 279],\n  [645, 274],\n  [651, 281],\n  [639, 279],\n  [639, 283],\n  [644, 280],\n  [642, 290],\n  [641, 288],\n  [674, 282],\n  [656, 321],\n  [611, 328],\n  [584, 318],\n  [625, 329],\n  [629, 339],\n  [637, 350],\n  [626, 358],\n  [623, 349],\n  [609, 348],\n  [603, 355],\n  [599, 326],\n  [607, 337],\n  [597, 280],\n  [591, 282],\n  [597, 284],\n];\n\nspots = spots.map((spot) => [\n  spot[0] * SCALE - X_OFFSET,\n  spot[1] * SCALE - Y_OFFSET,\n]);\n\nlet triangles: Triangle[] = [\n  /* EARS */\n  { x1: 533, y1: 239, x2: 552, y2: 225, x3: 546, y3: 218, fill: \"#151110\" },\n  { x1: 568, y1: 222, x2: 552, y2: 225, x3: 546, y3: 218, fill: \"#231E20\" },\n  { x1: 568, y1: 222, x2: 552, y2: 225, x3: 558, y3: 245, fill: \"#151110\" },\n  { x1: 568, y1: 222, x2: 558, y2: 245, x3: 581, y3: 227, fill: \"#231E20\" },\n  { x1: 573, y1: 249, x2: 558, y2: 245, x3: 581, y3: 227, fill: \"#151110\" },\n  { x1: 573, y1: 249, x2: 558, y2: 245, x3: 573, y3: 262, fill: \"#231E20\" },\n  { x1: 573, y1: 249, x2: 588, y2: 231, x3: 581, y3: 227, fill: \"#231E20\" },\n  { x1: 573, y1: 249, x2: 588, y2: 231, x3: 573, y3: 262, fill: \"#151110\" },\n  { x1: 683, y1: 249, x2: 670, y2: 257, x3: 648, y3: 225, fill: \"#231E20\" },\n  { x1: 683, y1: 249, x2: 670, y2: 218, x3: 648, y3: 225, fill: \"#151110\" },\n  { x1: 683, y1: 249, x2: 670, y2: 218, x3: 688, y3: 236, fill: \"#231E20\" },\n  { x1: 690, y1: 224, x2: 688, y2: 213, x3: 670, y3: 218, fill: \"#231E20\" },\n  { x1: 690, y1: 224, x2: 688, y2: 236, x3: 670, y3: 218, fill: \"#151110\" },\n  { x1: 690, y1: 224, x2: 688, y2: 213, x3: 706, y3: 229, fill: \"#151110\" },\n\n  /* BODY */\n  { x1: 589, y1: 252, x2: 588, y2: 231, x3: 573, y3: 262, fill: \"#32302D\" },\n  { x1: 589, y1: 252, x2: 588, y2: 231, x3: 603, y3: 234, fill: \"#6A6462\" },\n  { x1: 615, y1: 222, x2: 588, y2: 231, x3: 603, y3: 234, fill: \"#32302D\" },\n  { x1: 615, y1: 222, x2: 629, y2: 237, x3: 603, y3: 234, fill: \"#6A6462\" },\n  { x1: 615, y1: 222, x2: 629, y2: 237, x3: 648, y3: 225, fill: \"#32302D\" },\n  { x1: 653, y1: 254, x2: 629, y2: 237, x3: 648, y3: 225, fill: \"#6A6462\" },\n  { x1: 653, y1: 254, x2: 670, y2: 257, x3: 648, y3: 225, fill: \"#32302D\" },\n  { x1: 589, y1: 252, x2: 629, y2: 237, x3: 603, y3: 234, fill: \"#32302D\" },\n  { x1: 589, y1: 252, x2: 629, y2: 237, x3: 620, y3: 252, fill: \"#141213\" },\n  { x1: 653, y1: 254, x2: 629, y2: 237, x3: 620, y3: 252, fill: \"#32302D\" },\n  { x1: 576, y1: 284, x2: 589, y2: 252, x3: 573, y3: 262, fill: \"#231E20\" },\n  { x1: 576, y1: 284, x2: 589, y2: 252, x3: 585, y3: 281, fill: \"#6A6462\" },\n  { x1: 593, y1: 276, x2: 589, y2: 252, x3: 585, y3: 281, fill: \"#231E20\" },\n  { x1: 593, y1: 276, x2: 589, y2: 252, x3: 597, y3: 265, fill: \"#141213\" },\n  { x1: 620, y1: 252, x2: 589, y2: 252, x3: 597, y3: 265, fill: \"#32302D\" },\n  { x1: 593, y1: 276, x2: 599, y2: 282, x3: 597, y3: 265, fill: \"#32302D\" },\n  { x1: 620, y1: 252, x2: 599, y2: 282, x3: 597, y3: 265, fill: \"#141213\" },\n  { x1: 620, y1: 252, x2: 599, y2: 282, x3: 615, y3: 279, fill: \"#32302D\" },\n  { x1: 600, y1: 290, x2: 599, y2: 282, x3: 615, y3: 279, fill: \"#141213\" },\n  { x1: 620, y1: 252, x2: 653, y2: 254, x3: 615, y3: 279, fill: \"#141213\" },\n  { x1: 600, y1: 290, x2: 610, y2: 303, x3: 615, y3: 279, fill: \"#32302D\" },\n  { x1: 631, y1: 289, x2: 610, y2: 303, x3: 615, y3: 279, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 634, y2: 279, x3: 615, y3: 279, fill: \"#32302D\" },\n  { x1: 653, y1: 254, x2: 634, y2: 279, x3: 615, y3: 279, fill: \"#6A6462\" },\n  { x1: 653, y1: 254, x2: 634, y2: 279, x3: 645, y3: 274, fill: \"#32302D\" },\n  { x1: 653, y1: 254, x2: 670, y2: 257, x3: 645, y3: 274, fill: \"#141213\" },\n  { x1: 651, y1: 281, x2: 670, y2: 257, x3: 645, y3: 274, fill: \"#32302D\" },\n  { x1: 651, y1: 281, x2: 670, y2: 257, x3: 674, y3: 282, fill: \"#141213\" },\n  { x1: 651, y1: 281, x2: 656, y2: 321, x3: 674, y3: 282, fill: \"#32302D\" },\n  { x1: 651, y1: 281, x2: 656, y2: 321, x3: 642, y3: 290, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 656, y2: 321, x3: 642, y3: 290, fill: \"#32302D\" },\n  { x1: 631, y1: 289, x2: 611, y2: 328, x3: 610, y3: 303, fill: \"#6A6462\" },\n  { x1: 631, y1: 289, x2: 611, y2: 328, x3: 625, y3: 329, fill: \"#141213\" },\n  { x1: 600, y1: 290, x2: 611, y2: 328, x3: 610, y3: 303, fill: \"#141213\" },\n  { x1: 600, y1: 290, x2: 611, y2: 328, x3: 589, y3: 291, fill: \"#32302D\" },\n  { x1: 576, y1: 284, x2: 611, y2: 328, x3: 589, y3: 291, fill: \"#6A6462\" },\n  { x1: 576, y1: 284, x2: 589, y2: 291, x3: 585, y3: 281, fill: \"#32302D\" },\n  { x1: 631, y1: 289, x2: 629, y2: 339, x3: 656, y3: 321, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 625, y2: 329, x3: 629, y3: 339, fill: \"#6A6462\" },\n  { x1: 637, y1: 350, x2: 629, y2: 339, x3: 656, y3: 321, fill: \"#32302D\" },\n  { x1: 637, y1: 350, x2: 629, y2: 339, x3: 626, y3: 358, fill: \"#141213\" },\n  { x1: 623, y1: 349, x2: 629, y2: 339, x3: 626, y3: 358, fill: \"#32302D\" },\n  { x1: 623, y1: 349, x2: 609, y2: 348, x3: 626, y3: 358, fill: \"#141213\" },\n  { x1: 603, y1: 355, x2: 609, y2: 348, x3: 626, y3: 358, fill: \"#32302D\" },\n  { x1: 603, y1: 355, x2: 609, y2: 348, x3: 584, y3: 318, fill: \"#6A6462\" },\n  { x1: 599, y1: 326, x2: 609, y2: 348, x3: 584, y3: 318, fill: \"#141213\" },\n  { x1: 599, y1: 326, x2: 609, y2: 348, x3: 607, y3: 337, fill: \"#32302D\" },\n  { x1: 599, y1: 326, x2: 611, y2: 328, x3: 607, y3: 337, fill: \"#141213\" },\n  { x1: 584, y1: 318, x2: 611, y2: 328, x3: 599, y3: 326, fill: \"#32302D\" },\n  { x1: 584, y1: 318, x2: 611, y2: 328, x3: 576, y3: 284, fill: \"#32302D\" },\n\n  /* EYES */\n  { x1: 590, y1: 288, x2: 589, y2: 291, x3: 585, y3: 281, fill: \"#736B68\" },\n  { x1: 590, y1: 288, x2: 589, y2: 291, x3: 600, y3: 290, fill: \"#736B68\" },\n  { x1: 590, y1: 288, x2: 593, y2: 276, x3: 585, y3: 281, fill: \"#3C2F25\" },\n  { x1: 597, y1: 280, x2: 591, y2: 282, x3: 597, y3: 284, fill: \"#141213\" },\n  { x1: 597, y1: 280, x2: 599, y2: 282, x3: 597, y3: 284, fill: \"#3C2F25\" },\n  { x1: 590, y1: 288, x2: 591, y2: 282, x3: 597, y3: 284, fill: \"#3C2F25\" },\n  { x1: 593, y1: 276, x2: 591, y2: 282, x3: 597, y3: 280, fill: \"#3C2F25\" },\n  { x1: 590, y1: 288, x2: 600, y2: 290, x3: 599, y3: 282, fill: \"#3C2F25\" },\n  { x1: 631, y1: 289, x2: 642, y2: 290, x3: 641, y3: 288, fill: \"#736B68\" },\n  { x1: 651, y1: 281, x2: 642, y2: 290, x3: 641, y3: 288, fill: \"#736B68\" },\n  { x1: 639, y1: 279, x2: 639, y2: 283, x3: 644, y3: 280, fill: \"#141213\" },\n  { x1: 631, y1: 289, x2: 634, y2: 279, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 631, y1: 289, x2: 641, y2: 288, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 651, y1: 281, x2: 641, y2: 288, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 651, y1: 281, x2: 644, y2: 280, x3: 639, y3: 283, fill: \"#3C2F25\" },\n  { x1: 645, y1: 274, x2: 639, y2: 279, x3: 634, y3: 279, fill: \"#3C2F25\" },\n  { x1: 645, y1: 274, x2: 639, y2: 279, x3: 644, y3: 280, fill: \"#3C2F25\" },\n  { x1: 645, y1: 274, x2: 651, y2: 281, x3: 644, y3: 280, fill: \"#3C2F25\" },\n  { x1: 639, y1: 279, x2: 639, y2: 283, x3: 634, y3: 279, fill: \"#3C2F25\" },\n\n  /* NOSE */\n  { x1: 607, y1: 337, x2: 625, y2: 329, x3: 611, y3: 328, fill: \"#32302D\" },\n  { x1: 607, y1: 337, x2: 625, y2: 329, x3: 609, y3: 348, fill: \"#130C0A\" },\n  { x1: 623, y1: 349, x2: 625, y2: 329, x3: 609, y3: 348, fill: \"#130C0A\" },\n  { x1: 623, y1: 349, x2: 625, y2: 329, x3: 629, y3: 339, fill: \"#130C0A\" },\n];\n\ntriangles = triangles.map((tri) => {\n  return {\n    x1: tri.x1 * SCALE - X_OFFSET,\n    y1: tri.y1 * SCALE - Y_OFFSET,\n    x2: tri.x2 * SCALE - X_OFFSET,\n    y2: tri.y2 * SCALE - Y_OFFSET,\n    x3: tri.x3 * SCALE - X_OFFSET,\n    y3: tri.y3 * SCALE - Y_OFFSET,\n    fill: tri.fill,\n  };\n});\n\nexport default function Vertex({ setSection }: VertexProps) {\n  const [dragging, setDragging] = useState<boolean>(false);\n  const [startCoords, setStartCoords] = useState<number[]>([]);\n  const [endCoords, setEndCoords] = useState<number[]>([]);\n  const [lines, setLines] = useState<number[][]>([]);\n  const [confirmedTriangle, setConfirmedTriangle] = useState<Triangle[]>([]);\n\n  function handleMouseDown(\n    e: React.MouseEvent<HTMLParagraphElement, MouseEvent>\n  ) {\n    e.preventDefault();\n    setDragging(true);\n    const coords = getClosestNode(e.clientX, e.clientY, 10);\n    if (coords[0] != 0 && coords[1] != 0) {\n      setStartCoords(coords);\n    }\n  }\n\n  function handleMouseMove(e: React.MouseEvent) {\n    if (dragging) {\n      const coords: number[] = [e.clientX, e.clientY];\n      setEndCoords(coords);\n    }\n  }\n\n  function handleMouseUp() {\n    setDragging(false);\n    if (startCoords.length === 2 && endCoords.length === 2) {\n      const end = getClosestNode(endCoords[0], endCoords[1], 6);\n      if (end[0] != 0 && end[1] != 0) {\n        setLines([...lines, [...startCoords, ...end]]);\n      }\n    }\n    setEndCoords([]);\n    setStartCoords([]);\n  }\n\n  function getClosestNode(x: number, y: number, threshold: number) {\n    let minDistX = threshold;\n    let minDistY = threshold;\n    let minX: number = 0,\n      minY: number = 0;\n    spots\n      .filter((coord) => x - coord[0] < threshold && y - coord[1] < threshold)\n      .map((coord) => {\n        if (\n          Math.abs(x - coord[0]) < minDistX &&\n          Math.abs(y - coord[1]) < minDistY &&\n          numberOfCircles(coord) > 0\n        ) {\n          minDistX = Math.abs(x - coord[0]);\n          minDistY = Math.abs(y - coord[1]);\n          minX = coord[0];\n          minY = coord[1];\n        }\n      });\n\n    return [minX, minY];\n  }\n\n  function allLines(triangle: Triangle) {\n    const returnVal =\n      findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2).length > 0 &&\n      findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3).length > 0 &&\n      findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3).length > 0;\n    if (returnVal && !confirmedTriangle.includes(triangle)) {\n      setConfirmedTriangle([...confirmedTriangle, triangle]);\n      const firstSpot = numberOfCircles([triangle.x1, triangle.y1]) == 0;\n      const secondSpot = numberOfCircles([triangle.x2, triangle.y2]) == 0;\n      const thirdSpot = numberOfCircles([triangle.x3, triangle.y3]) == 0;\n      const condition = (line: number[]) =>\n        (!firstSpot ||\n          !secondSpot ||\n          !equalLines(\n            line,\n            findLine(triangle.x1, triangle.y1, triangle.x2, triangle.y2)[0]\n          )) &&\n        (!secondSpot ||\n          !thirdSpot ||\n          !equalLines(\n            line,\n            findLine(triangle.x2, triangle.y2, triangle.x3, triangle.y3)[0]\n          )) &&\n        (!firstSpot ||\n          !thirdSpot ||\n          !equalLines(\n            line,\n            findLine(triangle.x1, triangle.y1, triangle.x3, triangle.y3)[0]\n          ));\n      setLines(lines.filter((line) => condition(line)));\n    }\n    return returnVal;\n  }\n\n  function equalLines(line1: number[], line2: number[]) {\n    return (\n      line1[0] == line2[0] &&\n      line1[1] == line2[1] &&\n      line1[2] == line2[2] &&\n      line1[3] == line2[3]\n    );\n  }\n\n  function findLine(x1: number, y1: number, x2: number, y2: number) {\n    return lines.filter(\n      (coords) =>\n        (coords[0] == x1 &&\n          coords[1] == y1 &&\n          coords[2] == x2 &&\n          coords[3] == y2) ||\n        (coords[0] == x2 &&\n          coords[1] == y2 &&\n          coords[2] == x1 &&\n          coords[3] == y1)\n    );\n  }\n\n  function undoLastLine() {\n    let lastLines = lines;\n    lastLines.pop();\n    setLines(lastLines);\n  }\n\n  function numberOfCircles(spot: number[]) {\n    return triangles.filter(\n      (triangle) =>\n        !confirmedTriangle.includes(triangle) &&\n        ((triangle.x1 == spot[0] && triangle.y1 == spot[1]) ||\n          (triangle.x2 == spot[0] && triangle.y2 == spot[1]) ||\n          (triangle.x3 == spot[0] && triangle.y3 == spot[1]))\n    ).length;\n  }\n\n  return (\n    <>\n      <div className=\"home\" onClick={() => setSection(SECTION.NONE)}>\n        {HomeIcon}\n      </div>\n      <div\n        className=\"vertex-board\"\n        style={{ width: \"100%\", height: window.innerHeight }}\n        onMouseDown={handleMouseDown}\n        onMouseMove={handleMouseMove}\n        onMouseUp={handleMouseUp}\n      >\n        <div className=\"spots\">\n          {triangles.map(\n            (triangle) =>\n              confirmedTriangle.includes(triangle) && (\n                <svg className=\"strands-svg\" key={triangle.toString()}>\n                  {\n                    <polygon\n                      points={\n                        triangle.x1.toString() +\n                        \",\" +\n                        triangle.y1.toString() +\n                        \" \" +\n                        triangle.x2.toString() +\n                        \",\" +\n                        triangle.y2.toString() +\n                        \" \" +\n                        triangle.x3.toString() +\n                        \",\" +\n                        triangle.y3.toString()\n                      }\n                      style={{\n                        fill: triangle.fill,\n                        stroke: \"black\",\n                        strokeWidth: \"0\",\n                      }}\n                    />\n                  }\n                </svg>\n              )\n          )}\n          {spots.map(\n            (spot) =>\n              numberOfCircles(spot) > 0 && (\n                <svg\n                  className=\"vertex-svg\"\n                  key={spot.toString() + Math.random() * 100}\n                  style={{ zIndex: 5 }}\n                >\n                  <circle\n                    r={numberOfCircles(spot) + 5}\n                    cx={spot[0]}\n                    cy={spot[1]}\n                    fill=\"white\"\n                    stroke=\"black\"\n                    strokeWidth=\"0.5\"\n                  />\n                  <text\n                    x={spot[0]}\n                    y={spot[1]}\n                    textAnchor=\"middle\"\n                    alignmentBaseline=\"middle\"\n                    fontSize={numberOfCircles(spot) + 3}\n                    fill=\"black\"\n                  >\n                    {numberOfCircles(spot)}\n                  </text>\n                </svg>\n              )\n          )}\n\n          {startCoords.length == 2 && endCoords.length == 2 && (\n            <svg\n              className=\"vertex-lines\"\n              key={\n                startCoords.toString() +\n                endCoords.toString() +\n                Math.random() * 100\n              }\n              style={{ zIndex: -5 }}\n            >\n              <line\n                x1={startCoords[0]}\n                y1={startCoords[1]}\n                x2={endCoords[0]}\n                y2={endCoords[1]}\n                stroke=\"black\"\n                strokeWidth=\"1\"\n              />\n            </svg>\n          )}\n          {lines.map((line) => (\n            <svg\n              className=\"vertex-lines\"\n              key={\n                startCoords.toString() +\n                endCoords.toString() +\n                Math.random() * 100\n              }\n              style={{ zIndex: -5 }}\n            >\n              <line\n                x1={line[0]}\n                y1={line[1]}\n                x2={line[2]}\n                y2={line[3]}\n                stroke=\"black\"\n                strokeWidth=\"1\"\n              />\n            </svg>\n          ))}\n          <button\n            onClick={undoLastLine}\n            style={{ position: \"fixed\", bottom: 10 }}\n          >\n            Undo\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"],"mappings":"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AG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EAEzE;AACA;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EAEzE;AACA;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,IAAI,EAAE;AAAU,CAAC,EACzE;EAAEN,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;EAAEC,EAAE,EAAE,GAAG;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}